{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2419","fieldValue":" We describe an automata-theoretic approach for the competitive analysis of online algorithms. Our approach is based on weighted automata, which assign to each input word a cost in $R^â\u2030¥0$. By relating the â\u20ACœunbounded look aheadâ\u20AC? of optimal offline algorithms with nondeterminism, and relating the â\u20ACœno look aheadâ\u20AC? of online algorithms with determinism, we are able to solve problems about the competitive ratio of online algorithms, and the memory they require, by reducing them to questions about determinization and approximated determinization of weighted automata."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/2419","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/2419","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/15032","fieldValue":" Background:The gamut of a color CRT is defined by its three primary colors, each produced by a phosphor\/electron gun combination. Light from the primaries combines additively, so the color gamut is a subset of a three dimensional vector space [1]. With the primaries as basis vectors normalized to 1.0, the color gamut is a unit cube, known as the RGB color geometry, since the three primaries are usually red, green, and blue. User interaction via RGB is generally thought to be counterintuitive, and transformations of RGB, such as Smith's HSV geometry [10] which is derived from centuries old artists' models [2], are more popular. More recent color theories, based on psychophysical and physiological models of early visual processing, suggest that more intuitive geometries may be possible.The RGYB geometry is based on two recent discoveries about the human visual system. First, the three color signals from the cone receptors are organized into three opponent channels [1, 7]. A single achromatic channel indicates lightness or brightness. Two chromatic channels, red\/green and yellow\/blue, signal the chromatic quantities. Second, signals on the achromatic channel are easily distinguishable from signals on the chromatic ones [6]. Consequently, it is usual to represent colors as a set of surfaces of colors that vary in chromaticity, each at a different level of brightness. Examples are as diverse as CIE chromaticity coordinates, the CIELUV uniform color space, the Munsell color system, and computer graphics color spaces such as HSV and HLS [10, 12]."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/15032","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/15032","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/15033","fieldValue":" Volume rendering is a technique for visualizing sampled scalar or vector fields of three spatial dimensions without fitting geometric primitives to the data. A subset of these techniques generates images by computing 2-D projections of a colored semitransparent volume, where the color and opacity at each point are derived from the data using local operators. Since all voxels participate in the generation of each image, rendering time grows linearly with the size of the dataset. This paper presents a front-to-back image-order volume-rendering algorithm and discusses two techniques for improving its performance. The first technique employs a pyramid of binary volumes to encode spatial coherence present in the data, and the second technique uses an opacity threshold to adaptively terminate ray tracing. Although the actual time saved depends on the data, speedups of an order of magnitude have been observed for datasets of useful size and complexity. Examples from two applications are given: medical imaging and molecular graphics."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/15033","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/15033","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/15034","fieldValue":" We examine a class of algorithms for rasterizing algebraic curves based on an implicit form that can be evaluated cheaply in integer arithmetic using finite differences. These algorithms run fast and produce â\u20ACœoptimalâ\u20AC? digital output, where previously known algorithms have had serious limitations. We extend previous work on conic sections to the cubic and higher order curves, and we solve an important undersampling problem."}