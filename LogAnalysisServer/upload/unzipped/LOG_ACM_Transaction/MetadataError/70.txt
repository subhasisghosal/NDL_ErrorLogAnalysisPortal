{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/11169","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/11170","fieldValue":"Magana, Alejandra J"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/11170","fieldValue":"Falk, Michael L"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/11170","fieldValue":"Reese, Michael J"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/11170","fieldValue":" This article investigates the effectiveness of a course employing a discipline-based computing approach. The research questions driving this study were: (1) Can experiences with discipline-based computing promote studentsâ\u20AC™ acquisition and application of foundational computing concepts and procedures? (2) How do students perceive and experience the integration of discipline-based computing as relevant to their future career goals? (3) How do students perceive the structure of the class as useful and engaging for their learning? We used qualitative and quantitative research methods to approach the research questions. The population studied was 20 engineering undergraduates from Johns Hopkins University. Results of this study suggest that students performed proficiently in applying computing methods, procedures, and concepts to the solution of well-structured engineering problems. Results also suggest that student self-perceptions of their overall computing abilities and their abilities to specifically solve engineering problems shifted from low to high confidence. Students consistently found the course to be important and useful for their studies and their future careers. They also found the course to be of very high quality and identified the instructors and the teaching and feedback methods employed as very useful for their learning. Finally, students also described the course as very challenging compared with other courses in their own department and at the university in general."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11170","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/11170","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/11171","fieldValue":" This article discusses the evolution of a single undergraduate computer graphics course over five semesters, driven by a primary question: if one could offer only one undergraduate course in graphics, what would it include? This constraint is relevant to many small and medium-sized colleges that lack resources, adequate expertise, and enrollment to sustain multiple courses in graphics that spread out its vast and evolving content. We strive to include material that would provide (1) a basic but solid theoretical foundation, (2) topics, data structures, and algorithms that are most practically used, (3) ample experience in actual graphics programming and (4) a basic awareness of advanced topics. We have a secondary objective of relating and complementing computer graphics knowledge and programming with topics in other computer science courses to provide a more cohesive understanding to our students. We achieve both objectives by using an â\u20ACœearly-scenegraphsâ\u20AC? approach to progressively create graphics applications that use XML-based modeling and both pipeline-based and ray traced rendering. We report and analyze results that show how students were able to achieve more complex results within similar time periods while largely retaining prior average student performance in the course. Students also report higher rates of satisfaction with the course when it follows our proposed approach. Pedagogically our main contribution is an evolving blueprint for a single undergraduate CG course that offers flexibility to emphasize different aspects like modeling, rendering, etc. according to the instructorâ\u20AC™s and studentsâ\u20AC™ interests, while aligning the course better within the computer science curriculum especially when resources are limited."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11171","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/11171","fieldValue":"ACM"}