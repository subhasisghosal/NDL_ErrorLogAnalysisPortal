{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9833","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9833","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9833","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/1891","fieldValue":" Previous studies in software transactional memory mostly focused on reducing the overhead of transactional read and write operations. In this article, we introduce transaction coalescing, a profile-guided compiler optimization technique that attempts to reduce the overheads of starting and committing a transaction by merging two or more small transactions into one large transaction. We develop a profiling tool and a transaction coalescing heuristic to identify candidate transactions suitable for coalescing. We implement a compiler extension to automatically merge the candidate transactions at the compile time. We evaluate the effectiveness of our technique using the hash table micro-benchmark and the STAMP benchmark suite. Transaction coalescing improves the performance of the hash table significantly and the performance of Vacation and SSCA2 benchmarks by 19.4&percnt; and 36.4&percnt;, respectively, when running with 12 threads."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/1891","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/1891","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9834","fieldValue":" We develop, analyze and then numerically compare performance models of a fast-adapting and centrally controlled form of optical circuit switching (OCS) with a conservative form of optical burst switching (OBS). For the first time, we consider a unified model comprising both: edge buffers at which arriving packets are aggregated and enqueued according to a vacation-type service discipline with nondeterministic set-up times, together with a core network comprising switches arbitrarily interconnected via fibers to allow transmission of packets from an edge buffer to their desired egress point through use of a dynamic signaling process to establish a lightpath, and in the case of OCS, also acknowledge its establishment. As such, edge buffers dynamically issue requests for wavelength capacity via a two or one-way reservation signaling process. Previously analyzed models of OCS and OBS have either been for a stand-alone edge buffer or a core network without edge buffering. We compare OCS with OBS in terms of packet blocking probability due to edge buffer overflow and blocking at switches in the case of OBS; mean packet queueing delay at edge buffers; and, wavelength capacity utilization. Also for the first time, we derive the exact blocking probability for a multi-hop stand-alone OBS route, assuming Kleinrock's independence, which is not simply a matter of summing the stationary distribution of an appropriate Markov process over all blocking states, as shown to be the case for an OCS route."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9834","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9834","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9834","fieldValue":"ACM"}