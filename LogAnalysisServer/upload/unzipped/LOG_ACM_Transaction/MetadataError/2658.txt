{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18902","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18903","fieldValue":" We present division and square root algorithm for calculations with more bits than are handled by the floating-point hardware. These algorithms avoid the need to multiply two high-precision numbers, speeding up the last iteration by as much as a factor of 10. We also show how to produce the floating-point number closest to the exact result with relatively few additional operations."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18903","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18903","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/18904","fieldValue":"MacLeod, Allan J."}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18904","fieldValue":" The computation of Fermi-Dirac integrals *** is discussed for the values *** = -1, 1\/2, 3\/2, 5\/2. We derive Chebyshev polynomial expansions which allow the computation of these functions to double precision IEEE accuracy."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18904","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18904","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18905","fieldValue":" Explicit Runge-Kutta pairs can be enhanced by providing them with interpolants. Enhancements include the ability to estimate and control the defect, to produce dense output, and to calculate past values in delay differential equations. The coefficients of an interpolant are easily generated by bootstripping on the order conditions. However, the generation of high-order interpolants requires a large number of arithmetic operations. We describe an efficient algorithm for the generation of high-order interpolants and illustrate the use of the algorithm with three applications."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18905","fieldValue":"ACM"}