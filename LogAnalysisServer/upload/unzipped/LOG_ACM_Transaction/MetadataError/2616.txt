{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18793","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18794","fieldValue":" We report the development of second-derivative FORTRAN routines to supplement Algorithm 566 developed by J. MoreÂ´ et al. (ACM Trans. Math. Softw. 7, 14-41, 136â\u20AC\u201C140, 1981). Algorithm 566 provides function and gradient subroutines of 18 test functions for multivariate minimization. Our supplementary Hessian segments enable users to test optimization software that requires second derivative information. Eigenvalue analysis throughout the minimization is now possible, with the goal of better understanding progress by different minimization algorithms and the relation of progress to eigenvalue distribution and condition number."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18794","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18794","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18795","fieldValue":" The development of software for minimization problems is often based on a line search method. We consider line search methods that satisfy sufficient decrease and curvature conditions, and formulate the problem of determining a point that satisfies these two conditions in terms of finding a point in a set T(Î¼). We describe a search algorithm for this problem that produces a sequence of iterates that converge to a point in T(Î¼) and that, except for pathological cases, terminates in a finite number of steps. Numerical results for an implementation of the search algorithm on a set of test functions show that the algorithm terminates within a small number of iterations."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18795","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18795","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18796","fieldValue":" The features of the new standard language Fortran 90 are introduced and discussed. In order to focus the discussion, the particular context is the conversiton of an existing published ACM Transactions on Mathematical Software algorithm from Fortran 77 to the new standard. Emphasis is on the new features of the language, including the array facilities, the use of modules, the applicability of user-defined (-derived) data types, the reduction in machine dependence of numeric codes, and the dynamic allocation of storage. The intent is that writers of software as well as those who use Fortran in scientific and engineering work will find this a helpful introduction to the new and powerful features of Fortran 90."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18796","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18796","fieldValue":"ACM"}