{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/7156","fieldValue":"Creating personalized systems that people can scrutinize and control: Drivers, principles and experience"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/7156","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/7156","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/1652","fieldValue":" We develop a microprocessor design that tolerates hard faults, including fabrication defects and in-field faults, by leveraging existing microprocessor redundancy. To do this, we must: detect and correct errors, diagnose hard faults at the field deconfigurable unit (FDU) granularity, and deconfigure FDUs with hard faults. In our reliable microprocessor design, we use DIVA dynamic verification to detect and correct errors. Our new scheme for diagnosing hard faults tracks instructions' core structure occupancy from decode until commit. If a DIVA checker detects an error in an instruction, it increments a small saturating error counter for every FDU used by that instruction, including that DIVA checker. A hard fault in an FDU quickly leads to an above-threshold error counter for that FDU and thus diagnoses the fault. For deconfiguration, we use previously developed schemes for functional units and buffers and present a scheme for deconfiguring DIVA checkers. Experimental results show that our reliable microprocessor quickly and accurately diagnoses each hard fault that is injected and continues to function, albeit with somewhat degraded performance."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/1652","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/1652","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/7157","fieldValue":" This editorial introduction first outlines some of the research challenges raised by the emerging forms of internet-scale human problem solving. It then explains how the two articles in this special section can serve as illuminating complementary case studies, providing concrete examples embedded in general conceptual frameworks."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/7157","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/7157","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/7158","fieldValue":" A method of organizing the crowd to generate ideas is described. It integrates crowds using evolutionary algorithms. The method increases the creativity of ideas across generations, and it works better than greenfield idea generation. Specifically, a design space of internet-scale idea generation systems is defined, and one instance is tested: a crowd idea generation system that uses combination to improve previous designs. The key process of the system is the following: A crowd generates designs, then another crowd combines the designs of the previous crowd. In an experiment with 540 participants, the combined designs were compared to the initial designs and to the designs produced by a greenfield idea generation system. The results show that the sequential combination system produced more creative ideas in the last generation and outperformed the greenfield idea generation system. The design space of crowdsourced idea generation developed here may be used to instantiate systems that can be applied to a wide range of design problems. The work has both pragmatic and theoretical implications: New forms of coordination are now possible, and, using the crowd, it is possible to test existing and emerging theories of coordination and participatory design. Moreover, it may be possible for human designers, organized as a crowd, to codesign with each other and with automated algorithms."}