{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/24740","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/24741","fieldValue":" The design and analysis of multiprocessor simulation models represents a complex and computationally demanding application that is a candidate for parallel simulation. This paper examines the application of conservative parallel discrete event simulation on a set of existing â\u20ACœreal-worldâ\u20AC? models created over the years with no thought given to the parallel execution. These models are based on a subset of Petri Nets known as Marked graphs. The results of the study of the transparent and automatic parallel execution of the simulation of these models will be presented. Focus will be on the amount of inherent parallelism in such models, means of exploiting it, obstacles prohibiting parallelization, and sensitivity to different system and model parameters."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/24741","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/24741","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/24742","fieldValue":" A high-level simulation language based on temporal logic is described. The language combines a large set of temporal tenses and a rich class of high-level modeling primitives. Also an implementation of the language interpreter is presented. Finally, a real-world case study is described that shows how a programmer can develop structured, reliable, and well-maintainable simulation programs using the language."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/24742","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/24742","fieldValue":"ACM"}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/24586","fieldValue":"Issue 3(Special issue on graphics, animation, and visualization for simulation environments), July 1995"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/24743","fieldValue":" A graphical interactive technique for modeling bivariate simulation inputs is based on a family of continuous univariate and bivariate probability distributions with bounded support that are described by BeÂ´zier curves and surfaces, respectively. This family of distributions has a natural, extensible parameterization so that all parameters have a meaningful interpretation; and the complete family is capable of accurately representing an unlimited variety of shapes for marginal distributions together with many common types of bivariate stochastic dependence. This approach to simulation input modeling is implemented in a Windows-based software system called PRIME-PRobabilistic Input Modeling Environment. Several examples illustrate the application of PRIME to subjective and data-driven estimation of bivariate distributions representing simulation inputs."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/24743","fieldValue":"ACM"}