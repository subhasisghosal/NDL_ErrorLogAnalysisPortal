{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10516","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10516","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10516","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10517","fieldValue":" New applications such as soft real-time data center applications, algorithmic trading, and high-performance computing require extremely low latency (in microseconds) from networks. Network operators today lack sufficient fine-grain measurement tools to detect, localize, and repair delay spikes that cause application service level agreement (SLA) violations. A recently proposed solution called LDA provides a scalable way to obtain latency, but only provides aggregate measurements. However, debugging application-specific problems requires per-flow measurements since different flows may exhibit significantly different characteristics even when they are traversing the same link. To enable fine-grained per-flow measurements in routers, we propose a new scalable architecture called reference latency interpolation (RLI) that is based on our observation that packets potentially belonging to different flows that are closely spaced to each other exhibit similar delay properties. In our evaluation using simulations over real traces, we show that while having small overhead, RLI achieves a median relative error of 12% and one to two orders of magnitude higher accuracy than previous per-flow measurement solutions. We also observe RLI achieves as high accuracy as LDA in aggregate latency estimation, and RLI outperforms LDA in standard deviation estimation."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10517","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10517","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10517","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10518","fieldValue":" Many applications require the sink to compute a function of the data collected by the sensors. Instead of sending all the data to the sink, the intermediate nodes could process the data they receive to significantly reduce the volume of traffic transmitted: this is known as in-network computation. Instead of focusing on asymptotic results for large networks as is the current practice, we are interested in explicitly computing the maximum achievable throughput of a given network when the sink is interested in the first M statistical moments of the collected data. Here, the kth statistical moment is defined as the expectation of the kth power of the data. Flow models have been routinely used in multihop wireless networks when there is no in-network computation, and they are typically tractable for relatively large networks. However, deriving such models is not obvious when in-network computation is allowed. We develop a discrete-time model for the real-time network operation and perform two transformations to obtain a flow model that keeps the essence of in-network computation. This gives an upper bound on the maximum achievable throughput. To show its tightness, we derive a numerical lower bound by computing a solution to the discrete-time model based on the solution to the flow model. This lower bound turns out to be close to the upper bound, proving that the flow model is an excellent approximation to the discrete-time model. We then provide several engineering insights on these networks."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10518","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/10518","fieldValue":"Maximum achievable throughput in a wireless sensor network using in-network computation for statistical functions"}