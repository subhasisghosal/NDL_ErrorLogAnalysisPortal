{"fieldName":"dc.subject","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/21018","fieldValue":"SSD"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/21018","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/21018","fieldValue":"ACM"}{"fieldName":"dc.relation.haspart","informationCode":"ERR_FORMAT_HASPART","handle":"12345678_acm\/1001","fieldValue":"[{\"visible\":false,\"sortKey\":\"Dec 1992\",\"expandable\":true,\"handle\":\"12345678_acm\/1006\",\"title\":\"Issue 4, Dec 1992\"},{\"visible\":false,\"sortKey\":\"Sept 1992\",\"expandable\":true,\"handle\":\"12345678_acm\/1005\",\"title\":\"Issue 3, Sept 1992\"},{\"visible\":false,\"sortKey\":\"June 1992\",\"expandable\":true,\"handle\":\"12345678_acm\/1004\",\"title\":\"Issue 2, June 1992\"},{\"visible\":false,\"sortKey\":\"March 1992\",\"expandable\":true,\"handle\":\"12345678_acm\/1003\",\"title\":\"Issue 1, March 1992\"}]"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/1220","fieldValue":" One of the major challenges in the research of mobile ad hoc networks is designing dynamic, scalable, and low cost (in terms of utilization of resources) routing protocols usable in real-world applications. Routing in ad hoc networks has been explored to a large extent over the past decade and different protocols have been proposed. They are based on a two-dimensional view of the ad hoc network geographical region, and are not always realistic. In this article, we propose a bird flight-inspired, highly scalable, dynamic, energy-efficient, and position-based routing protocol called Bird Flight-Inspired Routing Protocol (BFIRP). The proposed protocol is inspired by the navigation of birds over long distances following the great circle arc, the shortest arc connecting two points on the surface of a sphere. This sheds light on how birds save their energy while navigating over thousands of miles. The proposed algorithm can be readily applied in many real-world applications, as it is designed with a realistic three-dimensional view of the networkâ\u20AC™s geographic region. In the proposed algorithm, each node obtains its location coordinates (X, Y, Z), and speed from the GPS (Global Positioning System); whereas, the destinationâ\u20AC™s location coordinates (X, Y, Z), and speed are obtained from any other distributed localized service. Based on the location information, the source and each intermediate node choose their immediate neighbor as the next hop that has the maximum priority. The priority is calculated by taking into consideration the energy of the node, the distance between the node and the destination and the degree of closeness of the node to the trajectory of the great circle arc between the current node and the destination. The proposed algorithm is simulated in J-SIM and compared with the algorithms of Ad Hoc On Demand Distance Vector (AODV), and Most Forward Within Distance R (MFR) routing protocols. The results of the simulations show that the proposed BFIRP algorithm is highly scalable, and has low end-to-end delay compared to AODV. The algorithm is also simulated in various scenarios, and the results demonstrate that BFIRP is more efficient than AODV in energy and throughput by 20&percnt; and 15&percnt; respectively. It also shows satisfactory improvement over MFR in terms of throughput and routing overhead."}{"fieldName":"dc.subject","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/1220","fieldValue":"J-SIM"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/1220","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/1220","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/21019","fieldValue":" Finite fields are widely used in constructing error-correcting codes and cryptographic algorithms. In practice, error-correcting codes use small finite fields to achieve high-throughput encoding and decoding. Conversely, cryptographic systems employ considerably larger finite fields to achieve high levels of security. We focus on developing efficient software implementations of arithmetic operations in reasonably large finite fields as needed by secure storage applications. In this article, we study several arithmetic operation implementations for finite fields ranging from $GF(2^32) to GF(2128). We implement multiplication and division in these finite fields by making use of precomputed tables in smaller fields, and several techniques of extending smaller field arithmetic into larger field operations. We show that by exploiting known techniques, as well as new optimizations, we are able to efficiently support operations over finite fields of interest. We perform a detailed evaluation of several techniques, and show that we achieve very practical performance for both multiplication and division. Finally, we show how these techniques find applications in the implementation of HAIL, a highly available distributed cloud storage layer. Using the newly implemented arithmetic operations in GF(264$), HAIL improves its performance by a factor of two, while simultaneously providing a higher level of security."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/21019","fieldValue":"ACM"}