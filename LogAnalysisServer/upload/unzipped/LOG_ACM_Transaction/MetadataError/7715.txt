{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10240","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10240","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10240","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10241","fieldValue":" In a multiparty video conference, multiple users simultaneously distribute video streams to their receivers. As the traditional server-based solutions incur high infrastructure and bandwidth cost, conventional peer-to-peer (P2P) solutions only leveraging end-users' upload bandwidth are normally not self-sustainable: The video streaming workload increases quadratically with the number of users as each user could generate and distribute video streams, while the user upload bandwidth only increases linearly. Recently, hybrid solutions have been proposed that employ helpers to address the bandwidth deficiency in P2P video-conferencing swarms. It is also noticed that a system hosting multiple parallel conferencing swarms can benefit from cross-swarm bandwidth sharing. However, how to optimally share bandwidth in such systems has not been explored so far. In this paper, we study the optimal bandwidth sharing in multiswarm multiparty P2P video-conferencing systems with helpers and investigate two cross-swarm bandwidth-sharing scenarios: 1) swarms are independent and peers from different swarms share a common pool of helpers; 2) swarms are cooperative and peers in a bandwidth-rich swarm can further share their bandwidth with peers in a bandwidth-poor swarm. For each scenario, we develop distributed algorithms for intraswarm and interswarm bandwidth allocation under a utility-maximization framework. Through analysis and simulation, we show that the proposed algorithms are robust to peer dynamics and can adaptively allocate peer and helper bandwidth across swarms so as to achieve the system-wide optimum."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10241","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10241","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10241","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10242","fieldValue":" This paper settles an open question with a positive answer: Optimal traffic engineering (or optimal multicommodity flow) can be realized using just link-state routing protocols with hop-by-hop forwarding. Today's typical versions of these protocols, Open Shortest Path First (OSPF) and Intermediate System-Intermediate System (IS-IS), split traffic evenly over shortest paths based on link weights. However, optimizing the link weights for OSPF\/IS-IS to the offered traffic is a well-known NP-hard problem, and even the best setting of the weights can deviate significantly from an optimal distribution of the traffic. In this paper, we propose a new link-state routing protocol, PEFT, that splits traffic over multiple paths with an exponential penalty on longer paths. Unlike its predecessor, DEFT, our new protocol provably achieves optimal traffic engineering while retaining the simplicity of hop-by-hop forwarding. The new protocol also leads to a significant reduction in the time needed to compute the best link weights. Both the protocol and the computational methods are developed in a conceptual framework, called Network Entropy Maximization, that is used to identify the traffic distributions that are not only optimal, but also realizable by link-state routing."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10242","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10242","fieldValue":"ACM"}