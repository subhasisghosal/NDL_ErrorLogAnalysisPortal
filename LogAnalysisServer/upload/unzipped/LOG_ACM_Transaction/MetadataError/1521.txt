{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/15626","fieldValue":" Many techniques have already been proposed to improve the efficiency of maximum intensity projection (MIP) volume rendering, but none of them considered the possible hypothesis of a better complexity than either O(n) for finding the maximum value of n samples along a ray or $O(n^3) for an object-order algorithm. Here, we fully model and analyze the use of octrees for MIP, and we mathematically show that the average MIP complexity can be reduced to O(n2) for an object-order algorithm, or to O(log(n)) per ray when using the image-order variant of our algorithm. Therefore, this improvement establishes a major advance for interactive MIP visualization of large-volume data.In parallel, we also present an object-order implementation of our algorithm, satisfying the theoretical O(n2$) result. It is based on hierarchical occlusion maps that perform on-the-fly visibility of the data, and our results show that it is the most efficient solution for MIP available to date."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/15626","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/15626","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/15627","fieldValue":" Recently, three-dimensional CAD systems based on feature-based solid modeling techniques have been widely used for product design. However, when part models associated with features are used in various downstream applications, simplified models at various levels of detail (LODs) are frequently more desirable than the full details of the parts. One challenge is to generate valid models at various LODs after an arbitrary rearrangement of features using a certain LOD criterion, because composite Boolean operations consisting of union and subtraction are not commutative. This article proposes an algorithm for feature-based multiresolution solid modeling based on the effective volumes of features. This algorithm guarantees the same resulting shape and the reasonable intermediate LOD models for an arbitrary rearrangement of the features, regardless of whether feature types are additive or subtractive. This characteristic enables various LOD criteria to be used for a wide range of applications including computer-aided design and analysis."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/15627","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/15627","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/15628","fieldValue":" In this article, we present a procedural object distribution function, a new texture basis function that distributes procedurally generated objects over a procedurally generated texture. The objects are distributed uniformly over the texture, and are guaranteed not to overlap. The scale, size, and orientation of the objects can be easily manipulated. The texture basis function is efficient to evaluate, and is suited for real-time applications. The new texturing primitive we present extends the range of textures that can be generated procedurally.The procedural object distribution function we propose is based on Poisson disk tiles and a direct stochastic tiling algorithm for Wang tiles. Poisson disk tiles are square tiles filled with a precomputed set of Poisson disk distributed points, inspired by Wang tiles. A single set of Poisson disk tiles enables the real-time generation of an infinite amount of Poisson disk distributions of arbitrary size. With the direct stochastic tiling algorithm, these Poisson disk distributions can be evaluated locally, at any position in the Euclidean plane.Poisson disk tiles and the direct stochastic tiling algorithm have many other applications in computer graphics. We briefly explore applications in object distribution, primitive distribution for illustration, and environment map sampling."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/15628","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/15628","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/15629","fieldValue":" The classical Z-buffer visibility algorithm samples a scene at regularly spaced points on an image plane. Previously, we introduced an extension of this algorithm called the irregular Z-buffer that permits sampling of the scene from arbitrary points on the image plane. These sample points are stored in a two-dimensional spatial data structure. Here we present a set of architectural enhancements to the classical Z-buffer acceleration hardware which supports efficient execution of the irregular Z-buffer. These enhancements enable efficient parallel construction and query of certain irregular data structures, including the grid of linked lists used by our algorithm. The enhancements include flexible atomic read-modify-write units located near the memory controller, an internal routing network between these units and the fragment processors, and a MIMD fragment processor design. We simulate the performance of this new architecture and demonstrate that it can be used to render high-quality shadows in geometrically complex scenes at interactive frame rates. We also discuss other uses of the irregular Z-buffer algorithm and the implications of our architectural changes in the design of chip-multiprocessors."}