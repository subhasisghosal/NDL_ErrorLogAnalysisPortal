{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/22793","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/3225","fieldValue":" This paper presents a new haptic locomotion interface, which comprises two programmable foot platforms with permanent foot machine contact. It is designed as a scalable and modular system with unit-by-unit extensibility offering up to six plus one degrees of freedom (DOF) per foot. The basic setup comprises three DOF per foot in the sagittal plane.The machine is based on a rigid hybrid parallel-serial robot kinematics structure. It is equipped with electrical direct drive motors, enabling highly dynamic footplate motions. For contact force measurement, six DOF force\/torque sensors are mounted under each foot platform. The system was developed for major application in gait rehabilitation, hence great importance was attached to the incorporation of maximum passive and active security measures for machine users and medical operating personnel.The simulator is able to perform walking trajectories with speeds of up to 5 km\/h and 120 steps\/min. The system is able to simulate not only slow and â\u20ACœsmoothâ\u20AC? trajectories like walking on an even floor, up\/down staircases, but also foot motions like walking on rough ground or even stumbling or sliding, which require high system dynamics.The machine is controlled by a self-developed full-featured robot control whose soft and hardware is based on up-to-date industrial standards and interfaces. The robot control software is based on RTLinux and runs on an industrial PC. The real-time motion generator includes a newly developed Fourier-based algorithm for the interpolation of natural cyclic walking trajectories. For the implementation of asynchronous events (e.g., sliding, stumbling), the controller comprises especially developed algorithms for automatic motion override adaptation. Different modes of haptic behavior needed for gait rehabilitation, ranging from full foot support during swing phase to completely passive behavior, are currently under development.Intuitive and safe machine operation by nontechnical personnel such as clinicians and physiotherapists is achieved via a separate Windows-based graphical user interface software comprising different window areas for machine programming and operation, real-time off-line simulation and online data visualization in two and three dimensions has been developed as well.A working prototype of the system has been built and tested successfully, including all soft and hardware components. Although the machine has been designed and built for major application in gait rehabilitation, its range of applicability is not limited to this area. It could be integrated into any setup requiring a highly dynamic haptic foot interface and permanent foot machine contact if needed."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/3225","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/3225","fieldValue":"ACM"}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/22794","fieldValue":"Editorial"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/22794","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/22794","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/22795","fieldValue":"Jayaraman, Praveen K"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/22795","fieldValue":" There are many examples in the literature of algorithms for synthesizing state machines from scenario-based models. The motivation for these is to automate the transition from scenario-based requirements to early behavioral design models. To date, however, these synthesis algorithms have tended to generate flat state machines which can be difficult to understand or adapt for practical systems. One of the reasons for this is that relationships between scenarios are often not taken into account during synthesisâ\u20AC\u201Deither because the relationships are not explicitly defined or because the synthesis algorithms are not sophisticated enough to cope with them. If relationships are not considered, it is impossible for a synthesis algorithm to know, for example, where one scenario stops and another continues. Furthermore, the lack of relationships makes it difficult to introduce structure into the generated state machines. With the introduction of interaction overview diagrams (IODs) in UML2.0, relationships such as continuation and concurrency can now be specified between scenarios in a way that conforms to the UML standard. But synthesis algorithms do not currently exist that take into account all of these relationships. This article presents a novel synthesis algorithm for an extended version of interaction overview diagram. This algorithm takes into account not only continuation and concurrency, but also preemption, suspension and the notion of a negative scenario. Furthermore, the synthesis algorithm generates well-structured state machines. These state machines are executable and can therefore be used to validate the scenarios. The hierarchy generated aids readability and so the state machines are more amenable to subsequent design steps. Our IOD extensions have a formal semantics and are supported by a synthesis and execution tool, UCSIM, which is currently provided as a plug-in to IBM Rational Software Modeler."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/22795","fieldValue":"ACM"}