{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/11357","fieldValue":" We extend the standard model checking paradigm of linear temporal logic, LTL, to a â\u20ACœmodel measuringâ\u20AC? paradigm where one can obtain more quantitative information beyond a â\u20ACœYes\/Noâ\u20AC? answer. For this purpose, we define a parametric temporal logic, PLTL, which allows statements such as â\u20ACœa request p is followed in at most x steps by a response q,â\u20AC? where x is a free variable. We show how one can, given a formula ***(x1...,xk) of PLTL and a system model K satisfies the property ***, but if so find valuations which satisfy various optimality criteria. In particular, we present algorithms for finding valuations which minimize (or maximize) the maximum (or minimum) of all parameters. Theses algorithms exhibit the same PSPACE complexity as LTL model checking. We show that our choice of syntax for PLTL lies at the threshold of decidability for parametric temporal logics, in that several natural extensions have undecidable â\u20ACœmodel measuringâ\u20AC? problems."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11357","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/11357","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/11358","fieldValue":" Automata on infinite words are used for specification and verification of nonterminating programs. Different types of automata induce different levels of expressive power, of succinctness, and of complexity. Alternating automata have both existential and universal branching modes and are particularly suitable for specification of programs. In a weak alternating automata the state space is partitioned into partially ordered sets, and the automaton can proceed from a certain set only to smaller sets. Reasoning about weak alternating automata is easier than reasoning about alternating automata with no restricted structure. Known translations of alternating automata to weak alternating automata involve determinization, and therefore involve a double-exponential blow-up. In this paper we describe a quadratic translation, which circumvents the need for determinization, of BÃ¼chi and co-BÃ¼chi alternating automata to weak alternating automata. Beyond the independent interest of such a translation, it gives rise to a simple complementation algorithm for nondeterministic BÃ¼chi automata."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11358","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/11358","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/11359","fieldValue":" This special issue of the ACM Transactions on Computational Logic (TOCL) is dedicated to Robert A. Kowalski, or as he is better known, to Bob Kowalski, on the occasion of his 60th birthday. Throughout his distinguished research career Bob has been interested in various forms of logic-based reasoning from the computer science point of view. This novel view of logic has had an impact on a number of areas, including programming languages, databases, artificial intelligence, natural language processing, and more recently machine learning. In the late sixties and early seventies Bob contributed to the development of the theory of resolution by proposing a number of modifications to the original proposal of Alan Robinson. One of the notions that withstood the test of time is his and Hayes concept of semantic trees. This research eventually led him to the seminal 1974 paper Predicate Logic as a Programming Language which is at the roots of the logic programming paradigm. His early work with Maarten van Emden provided a direction for the subsequent research on procedural and declarative semantics of programming languages within the specific field of logic programming. In turn, his influential dictum \"Algorithm+Logic=Control\" has shaped our views on the essence of declarative programming within the logic programming framework and has had a large impact on the design of new control mechanisms for this approach to programming. His subsequent research revealed the rich potential of the logic programming paradigm. He showed how legal, metalevel, and commonsense reasoning can naturally be formalized by means of logic programs. His work with Marek Sergot on the event calculus had a long-standing impact on the research effort of representing temporal knowledge and formalizing commonsense reasoning. His research on verification of integrity constraints for database systems became highly relevant in deductive and temporal databases, while his work on abductive reasoning and argumentation was influential for mechanized legal and diagnostic reasoning. More recently, his work on multiagent systems has helped shape new approaches to building intelligent distributed systems. Several of these themes can be found in the collection of papers that constitute this special issue. All of these papers were solicited directly by the guest editors but, conforming to the high standards of TOCL, went through the usual rigorous refereeing process. We would like to thank the authors of the contributed papers for their willingness and interest in contributing to this issue. We also thank the referees for their precious time in providing helpful reviews of the submissions.And to Bob we extend our best wishes and hope he will agree with us thatthis special issue shows, at least partly, the long-term impact of his research."}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11359","fieldValue":"Editorial"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11359","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/11359","fieldValue":"ACM"}