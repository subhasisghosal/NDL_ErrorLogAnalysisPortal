{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10987","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10988","fieldValue":" We study Compound TCP C-TCP, the default TCP in the Windows operating system, with Random Exponential Marking REM and the widely used Drop-Tail queue policy. The performance metrics we consider are stability of the queue size, queuing delay, link utilization, and packet loss. We analyze the following models: 1 a nonlinear model for C-TCP with Drop-Tail and small buffers; 2 a stochastic variant of REM along with C-TCP; and 3 the original REM proposal as a continuous-time nonlinear model with delayed feedback. We derive conditions to ensure local stability and show that variations in system parameters can induce a Hopf bifurcation, which would lead to the emergence of limit cycles. With Drop-Tail and small buffers, the Compound parameters and the buffer size both play a key role in ensuring stability. In the stochastic variant of REM, larger thresholds for marking\/dropping packets can destabilize the system. With the original REM proposal, using PoincareÌ? normal forms and the center manifold analysis, we also characterize the type of the Hopf bifurcation. This enables us to analytically verify the stability of the bifurcating limit cycles. Packet-level simulations corroborate some of the analysis. Some design guidelines to ensure stability and low latency are outlined."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10988","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10988","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10988","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2004","fieldValue":" Aggressive prefetching improves system performance by hiding and tolerating off-chip memory latency. However, on a multicore system, prefetchers of different cores contend for shared resources and aggressive prefetching can degrade the overall system performance. The role of a prefetcher aggressiveness engine is to select appropriate aggressiveness levels for each prefetcher such that shared resource contention caused by prefetchers is reduced, thereby improving system performance. State-of-the-art prefetcher aggressiveness engines monitor metrics such as prefetch accuracy, bandwidth consumption, and last-level cache pollution. They use carefully tuned thresholds for these metrics, and when the thresholds are crossed, they trigger aggressiveness control measures. These engines have three major shortcomings: (1) thresholds are dependent on the system configuration (cache size, DRAM scheduling policy, and cache replacement policy) and have to be tuned appropriately, (2) there is no single threshold that works well across all the workloads, and (3) thresholds are oblivious to the phase change of applications. To overcome these shortcomings, we propose CAFFEINE, a model-based approach that analyzes the effectiveness of a prefetcher and uses a metric called net utility to control the aggressiveness. Our metric provides net processor cycles saved because of prefetching by approximating the cycles saved across the memory subsystem, from last-level cache to DRAM. We evaluate CAFFEINE across a wide range of workloads and compare it with the state-of-the-art prefetcher aggressiveness engine. Experimental results demonstrate that, on average (geomean), CAFFEINE achieves 9.5&percnt; (as much as 38.29&percnt;) and 11&percnt; (as much as 20.7&percnt;) better performance than the best-performing aggressiveness engine for four-core and eight-core systems, respectively."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/2004","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/2004","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/10989","fieldValue":"Jianxia Ning"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/10989","fieldValue":"Bin Liu"}