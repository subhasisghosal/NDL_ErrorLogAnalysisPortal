{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/3243","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/22970","fieldValue":" Complete dynamic control flow is a fundamental kind of execution profile about program executions with a wide range of applications. Tracing the dynamic control flow of program executions for a brief period easily generates a trace consisting of billions of control flow events. The number of events in such a trace is large, making both path tracing and path querying to incur significant slowdowns. A major class of path tracing techniques is to design novel trace representations that can be generated efficiently, and encode the inputted sequences of such events so that the inputted sequences are still derivable from the encoded and smaller representations. The control flow semantics in such representations have, however, become obscure, which makes implementing path queries on such a representation inefficient and the design of such queries complicated. We propose a novel two-phase path tracing frameworkâ\u20AC\u201DHierarchical Program Path (HPP)â\u20AC\u201Dto model the complete dynamic control flow of an arbitrary number of executions of a program. In Phase 1, HPP monitors each execution, and efficiently generates a stream of events, namely HPPTree, representing a novel tree-based representation of control flow for each thread of control in the execution. In Phase 2, given a set of such event streams, HPP identifies all the equivalent instances of the same exercised interprocedural path in all the corresponding HPPTree instances, and represents each such equivalent set of paths with a single subgraph, resulting in our compositional graph-based trace representation, namely, HPPDAG. Thus, an HPPDAG instance has the potential to be significantly smaller in size than the corresponding HPPTree instances, and still completely preserves the control flow semantics of the traced executions. Control flow queries over all the traced executions can also be directly performed on the single HPPDAG instance instead of separately processing the trace representation of each execution followed by aggregating their results. We validate HPP using the SPLASH2 and SPECint 2006 benchmarks. Compared to the existing technique, named BLPT (Ball-Larus-based Path Tracing), HPP generates significantly smaller trace representations and incurs fewer slowdowns to the native executions in online tracing of Phase 1. The HPPDAG instances generated in Phase 2 are significantly smaller than their corresponding BLPT and HPPTree traces. We show that HPPDAG supports efficient backtrace querying, which is a representative path query based on complete control flow trace. Finally, we illustrate the ease of use of HPPDAG by building a novel and highly efficient path profiling technique to demonstrate the applicability of HPPDAG."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/22970","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/22970","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/22971","fieldValue":"Aalst, Wil M P Van Der"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/22971","fieldValue":"Hofstede, Arthur H M Ter"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/22971","fieldValue":" The abundance of event data in todayâ\u20AC™s information systems makes it possible to â\u20ACœconfrontâ\u20AC? process models with the actual observed behavior. Process mining techniques use event logs to discover process models that describe the observed behavior, and to check conformance of process models by diagnosing deviations between models and reality. In many situations, it is desirable to mediate between a preexisting model and observed behavior. Hence, we would like to repair the model while improving the correspondence between model and log as much as possible. The approach presented in this article assigns predefined costs to repair actions (allowing inserting or skipping of activities). Given a maximum degree of change, we search for models that are optimal in terms of fitnessâ\u20AC\u201Dthat is, the fraction of behavior in the log not possible according to the model is minimized. To compute fitness, we need to align the model and log, which can be time consuming. Hence, finding an optimal repair may be intractable. We propose different alternative approaches to speed up repair. The number of alignment computations can be reduced dramatically while still returning near-optimal repairs. The different approaches have been implemented using the process mining framework ProM and evaluated using real-life logs."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/22971","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/22971","fieldValue":"ACM"}{"fieldName":"dc.relation.haspart","informationCode":"ERR_FORMAT_HASPART","handle":"12345678_acm\/22972","fieldValue":"[{\"visible\":false,\"sortKey\":\"10\",\"expandable\":true,\"handle\":\"12345678_acm\/22982\",\"title\":\"ACM Transactions on Speech and Language Processing (TSLP) : Volume 10\"},{\"visible\":false,\"sortKey\":\"9\",\"expandable\":true,\"handle\":\"12345678_acm\/22981\",\"title\":\"ACM Transactions on Speech and Language Processing (TSLP) : Volume 9\"},{\"visible\":false,\"sortKey\":\"8\",\"expandable\":true,\"handle\":\"12345678_acm\/22980\",\"title\":\"ACM Transactions on Speech and Language Processing (TSLP) : Volume 8\"},{\"visible\":false,\"sortKey\":\"7\",\"expandable\":true,\"handle\":\"12345678_acm\/22979\",\"title\":\"ACM Transactions on Speech and Language Processing (TSLP) : Volume 7\"},{\"visible\":false,\"sortKey\":\"6\",\"expandable\":true,\"handle\":\"12345678_acm\/22978\",\"title\":\"ACM Transactions on Speech and Language Processing (TSLP) : Volume 6\"},{\"visible\":false,\"sortKey\":\"5\",\"expandable\":true,\"handle\":\"12345678_acm\/22977\",\"title\":\"ACM Transactions on Speech and Language Processing (TSLP) : Volume 5\"},{\"visible\":false,\"sortKey\":\"4\",\"expandable\":true,\"handle\":\"12345678_acm\/22976\",\"title\":\"ACM Transactions on Speech and Language Processing (TSLP) : Volume 4\"},{\"visible\":false,\"sortKey\":\"3\",\"expandable\":true,\"handle\":\"12345678_acm\/22975\",\"title\":\"ACM Transactions on Speech and Language Processing (TSLP) : Volume 3\"},{\"visible\":false,\"sortKey\":\"2\",\"expandable\":true,\"handle\":\"12345678_acm\/22974\",\"title\":\"ACM Transactions on Speech and Language Processing (TSLP) : Volume 2\"},{\"visible\":false,\"sortKey\":\"1\",\"expandable\":true,\"handle\":\"12345678_acm\/22973\",\"title\":\"ACM Transactions on Speech and Language Processing (TSLP) : Volume 1\"}]"}