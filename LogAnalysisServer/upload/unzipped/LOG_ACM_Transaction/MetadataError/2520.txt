{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18521","fieldValue":" A theory is given that accounts for the observed behavior of Runge-Kutta codes when the stepsize is restricted by stability. The theory deals with the general case when the dominant eigenvalues of the Jacobian may be a complex conjugate pair. This extends and generalizes the results of Part I of this paper, which deal with the real case. Familiarity with Part I is assumed, but not essential."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18521","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18521","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/1197","fieldValue":" Ubiquitous and pervasive Grid computing is an emerging computing paradigm that will have a significant impact on the next-generation information infrastructure. Communication networks form a significant integrant of ubiquitous and pervasive Grids and must be utilized effectively by the Grids. The notion of Grid network service may greatly facilitate integrating networking systems into the Grid architecture, and network service description and discovery play a crucial role in the network-Grid integration. Current service description and discovery technologies must be enhanced to meet the special requirements of network service description and discovery for high-performance ubiquitous and pervasive Grids. Network service description needs a model for service provisioning capability and network service discovery must be able to select those networks that meet certain performance requirements. The wide variety of networking systems in ubiquitous and pervasive Grids require general and flexible network service description and discovery approaches that are applicable to heterogeneous networks. The research presented in this article aims at developing network service description and discovery technologies for high-performance ubiquitous and pervasive Grid computing. The main contributions of this article include a general model for describing service capabilities of various networking systems, a service discovery technology for selecting network services that meet the performance requirements specified by Grid applications, and a resource allocation scheme for Grid network services to provide networking performance guarantees. The developed model and technologies are general and flexible; thus are applicable to the wide variety of heterogeneous networks in ubiquitous and pervasive Grid computing environments."}{"fieldName":"dc.identifier.other","informationCode":"ERR_FORMAT_DOI","handle":"12345678_acm\/1197","fieldValue":"{\"doi\":\"1921641.1921644\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/1197","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/1197","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2739","fieldValue":" Multi-Pivot Quicksort refers to variants of classical quicksort where in the partitioning step k pivots are used to split the input into k + 1 segments. For many years, multi-pivot quicksort was regarded as impractical, but in 2009 a two-pivot approach by Yaroslavskiy, Bentley, and Bloch was chosen as the standard sorting algorithm in Sunâ\u20AC™s Java 7. In 2014 at ALENEX, Kushagra et al. introduced an even faster algorithm that uses three pivots. This article studies what possible advantages multi-pivot quicksort might offer in general. The contributions are as follows: Natural comparison-optimal algorithms for multi-pivot quicksort are devised and analyzed. The analysis shows that the benefits of using multiple pivots with respect to the average comparison count are marginal and these strategies are inferior to simpler strategies such as the well-known median-of-k approach. A substantial part of the partitioning cost is caused by rearranging elements. A rigorous analysis of an algorithm for rearranging elements in the partitioning step is carried out, observing mainly how often array cells are accessed during partitioning. The algorithm behaves best if three to five pivots are used. Experiments show that this translates into good cache behavior and is closest to predicting observed running times of multi-pivot quicksort algorithms. Finally, it is studied how choosing pivots from a sample affects sorting cost. The study is theoretical in the sense that although the findings motivate design recommendations for multipivot quicksort algorithms that lead to running-time improvements over known algorithms in an experimental setting, these improvements are small."}{"fieldName":"dc.description","informationCode":"ERR_FOUND_HTML_TAG","handle":"12345678_acm\/2739","fieldValue":"Author Affiliation: Technische Universit&#228;t Ilmenau, Ilmenau, Germany (Dietzfelbinger, Martin; Klaue, Pascal); Technische Universit&#228;t Ilmenau (Aumller, Martin)"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/2739","fieldValue":"ACM"}