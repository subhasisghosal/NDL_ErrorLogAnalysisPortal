{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/19307","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/19307","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/19308","fieldValue":"Van Gijzen, Martin B."}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/19308","fieldValue":" The IDR(s) method that is proposed in Sonneveld and van Gijzen [2008] is a very efficient limited memory method for solving large nonsymmetric systems of linear equations. IDR(s) is based on the induced dimension reduction theorem, that provides a way to construct subsequent residuals that lie in a sequence of shrinking subspaces. The IDR(s) algorithm that is given in Sonneveld and van Gijzen [2008] is a direct translation of the theorem into an algorithm. This translation is not unique. This article derives a new IDR(s) variant, that imposes (one-sided) biorthogonalization conditions on the iteration vectors. The resulting method has lower overhead in vector operations than the original IDR(s) algorithms. In exact arithmetic, both algorithms give the same residual at every (s &plus; 1)-st step, but the intermediate residuals and also the numerical properties differ. We show through numerical experiments that the new variant is more stable and more accurate than the original IDR(s) algorithm, and that it outperforms other state-of-the-art techniques for realistic test problems."}{"fieldName":"dc.subject","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/19308","fieldValue":"IDR"}{"fieldName":"dc.subject","informationCode":"ERR_FOUND_HTML_TAG","handle":"12345678_acm\/19308","fieldValue":"IDR(<i>s<\/i>)"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/19308","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/19308","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/19309","fieldValue":" A Fortran 90 program for the computation of the real parabolic cylinder functions W(a, Â± x), x â\u2030¥ 0 and their derivatives is presented. The code also computes scaled functions for a > 50. The functions W(a, &pm; x) are a numerically satisfactory pair of solutions of the parabolic cylinder equation yâ\u20AC² &plus; $(x^2\/4 âˆ\u2019 a)y &equals; 0, x â\u2030¥ 0. Using Wronskian tests, we claim a relative accuracy better than 5 10âˆ\u201913 in the computable range of unscaled functions, while for scaled functions the aimed relative accuracy is better than 5 10âˆ\u201914$. This code, together with the algorithm and related software described in Gil et al. [2006a, 2006b], completes the set of software for Parabolic Cylinder Functions (PCFs) for real arguments."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/19309","fieldValue":"ACM"}