{"fieldName":"dc.relation.haspart","informationCode":"WARN_JSON_MINIFY","handle":"12345678_acm\/13640","fieldValue":"[{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13992\",\"title\":\"Designing a Portable Natural Language Database Query System\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13993\",\"title\":\"Practical data-swapping:  the first steps\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13994\",\"title\":\"The Grid File: An Adaptable, Symmetric Multikey File Structure\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13995\",\"title\":\"A Database Management System for the Federal Courts\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13996\",\"title\":\"On Concurrency Control by Multiple Versions\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13997\",\"title\":\"Response Time Analysis of Multiprocessor Computers for Database Support\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13998\",\"title\":\"Join and Semijoin Algorithms for a Multiprocessor Database Machine\"}]"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/13992","fieldValue":" One barrier to the acceptance of natural language database query systems is the substantial installation effort required for each new database. Much of this effort involves the encoding of semantic knowledge for the domain of discourse, necessary to correctly interpret and respond to natural language questions. For such systems to be practical, techniques must be developed to increase their portability to new domains.This paper discusses several issues involving the portability of natural language interfaces to database systems, and presents the approach taken in CO-OP â\u20AC\u201D a natural language database query system that provides cooperative responses to English questions and operates with a typical CODA-SYL database system. CO-OP derives its domain-specific knowledge from a lexicon (the list of words known to the system) and the information already present in the structure and content of the underlying database. Experience with the implementation suggests that strategies that are not directly derivative of cognitive or linguistic models may nonetheless play an important role in the development of practical natural language systems."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/13992","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/13992","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/13993","fieldValue":" The problem of statistical database confidentiality in releasing microdata is addressed through the use of approximate data-swapping. Here, a portion of the microdata is replaced with a database that has been selected with approximately the same statistics. The result guarantees the confidentiality of the original data, while providing microdata with accurate statistics. Methods for achieving such transformations are considered and analyzed through simulation."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/13993","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/13993","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/13994","fieldValue":" Traditional file structures that provide multikey access to records, for example, inverted files, are extensions of file structures originally designed for single-key access. They manifest various deficiencies in particular for multikey access to highly dynamic files. We study the dynamic aspects of file structures that treat all keys symmetrically, that is, file structures which avoid the distinction between primary and secondary keys. We start from a bitmap approach and treat the problem of file design as one of data compression of a large sparse matrix. This leads to the notions of a grid partition of the search space and of a grid directory, which are the keys to a dynamic file structure called the grid file. This file system adapts gracefully to its contents under insertions and deletions, and thus achieves an upper bound of two disk accesses for single record retrieval; it also handles range queries and partially specified queries efficiently. We discuss in detail the design decisions that led to the grid file, present simulation results of its behavior, and compare it to other multikey access file structures."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/13994","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/13994","fieldValue":"ACM"}