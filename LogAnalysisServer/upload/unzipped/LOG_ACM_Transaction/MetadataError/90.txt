{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2025","fieldValue":" In high-performance systems, stencil computations play a crucial role as they appear in a variety of different fields of application, ranging from partial differential equation solving, to computer simulation of particlesâ\u20AC™ interaction, to image processing and computer vision. The computationally intensive nature of those algorithms created the need for solutions to efficiently implement them in order to save both execution time and energy. This, in combination with their regular structure, has justified their widespread study and the proposal of largely different approaches to their optimization. However, most of these works are focused on aggressive compile time optimization, cache locality optimization, and parallelism extraction for the multicore\/multiprocessor domain, while fewer works are focused on the exploitation of custom architectures to further exploit the regular structure of Iterative Stencil Loops (ISLs), specifically with the goal of improving power efficiency. This work introduces a methodology to systematically design power-efficient hardware accelerators for the optimal execution of ISL algorithms on Field-programmable Gate Arrays (FPGAs). As part of the methodology, we introduce the notion of Streaming Stencil Time-step (SST), a streaming-based architecture capable of achieving both low resource usage and efficient data reuse thanks to an optimal data buffering strategy, and we introduce a technique called SSTs queuing that is capable of delivering a pseudolinear execution time speedup with constant bandwidth. The methodology has been validated on significant benchmarks on a Virtex-7 FPGA using the Xilinx Vivado suite. Results demonstrate how the efficient usage of the on-chip memory resources realized by an SST allows one to treat problem sizes whose implementation would otherwise not be possible via direct synthesis of the original, unmanipulated code via High-Level Synthesis (HLS). We also show how the SSTs queuing effectively ensures a pseudolinear throughput speedup while consuming constant off-chip bandwidth."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/2025","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/2025","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/11216","fieldValue":"McCartney, Robert"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/11216","fieldValue":" This editorial marks the end of our tenure as founding co-editors-in-chief of the ACM Transactions on Computing Education (TOCE). We have three goals in this editorial. First, we provide a retrospective on how we positioned TOCE, both in terms of how it embodies our conception of Computing Education Research (CER) as a field, as well as the journal's role in the larger computing education community and the ACM. We focus on the process by which we determined what constitutes publishability for a manuscript submitted to TOCE, describing what is best understood as a living process negotiated among the authors, reviewers, associate editors, and editors-in-chief in interaction with manuscripts and one another. Second, having reviewed a bit of history, we look at some possible changes in TOCE's future, particularly in light of conversations that the ACM is engaged in at all levels regarding recent open publishing initiatives as well as the relationship between journal and conference publications. Finally, we thank the many people who have contributed to the success of TOCE for their significant effort in establishing TOCE as a publication venue for papers in computing education."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11216","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/11216","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/11217","fieldValue":" The Object-Oriented Programming (OOP) technique is nowadays the most popular programming technique among tertiary education institutions. However, learning OOP is a cognitively demanding task for undergraduate students. Several difficulties and misconceptions have been recorded in the literature for both OOP concepts and languages, mainly Java. This article focuses on reviewing and advancing research on the most fundamental OOP concepts, namely, the concepts of â\u20ACœobjectâ\u20AC? and â\u20ACœclassâ\u20AC? and their role during program execution. The results of a long-term investigation on the subject are presented, focusing on a study exploring undergraduate studentsâ\u20AC™ conceptions on â\u20ACœobjectsâ\u20AC? and â\u20ACœclasses.â\u20AC? The study advances related research on categories of conceptions on â\u20ACœobjectsâ\u20AC? and â\u20ACœclassesâ\u20AC? by providing quantitative results, in addition to qualitative results, regarding the frequency of the recorded conceptions. Nearly half the students seem to comprehend the modeling and static&sol;dynamic aspects of the concepts â\u20ACœobjectâ\u20AC? and â\u20ACœclass.â\u20AC? Implications for achieving a deep conceptual understanding of text, action, and modeling aspects of these fundamental concepts are also discussed. Information regarding the programming environments utilized in the course and key features of the applied teaching approach are presented, in order to facilitate both a better understanding of the context and a better employment of the results of the presented study. Finally, proposals for enhancing the contribution of this and similar studies are made."}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/11217","fieldValue":"Object-Oriented Design and Programming: An Investigation of Novicesâ\u20AC™ Conceptions on Objects and Classes"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11217","fieldValue":"ACM"}