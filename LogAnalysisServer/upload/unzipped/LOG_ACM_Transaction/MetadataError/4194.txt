{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/23642","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/3294","fieldValue":" There is a discrepancy between the ability to correctly match the gains of visual and motor speed in virtual reality (VR) when walking on solid ground and the failure of this ability when walking on a treadmill. Moreover, this discrepancy has been found to interact with effects of the structure of the visual environment. The authors used a high-fidelity treadmill VR system to reproduce the high interactivity of normal walking in wide-area VR. Under these conditions, it was found that gain matches in a richly structured near environment differ by only about 10&percnt; in treadmill VR from matches in wide-area VR and that trial-to-trial variations in step frequency predicted changes in perceived locomotor speed. Gait differences resulting from treadmill walking (which are shown not to be a product of wearing a head-mounted display), apparently lead to an overestimation of motor speed on treadmills. When the near visual environment represented an empty hallway, additional errors were present that could be accounted for by known illusions in the perception of visual speed during self-motion. A study of normal gait at different speeds measured by head-tracker is reported as evidence of other possible sources of perceptual estimates of locomotor speed in normal walking."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/3294","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/3294","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/23643","fieldValue":" Specialization hierarchies typically are treated as type-level constructs and are used to define various inheritance mechanisms. In this paper we consider specialization at the level of objects. We show that doing so creates a more flexible and powerful notion of inheritance by allowing objects to define their own inheritance path. Object specialization can also be used to model certain forms of versioning, implement data abstraction, and provide a â\u20ACœclasslessâ\u20AC? prototype-based language interface to the user."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/23643","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/23643","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/23644","fieldValue":" We describe a data model for structured office information objects, which we generically call â\u20ACœdocuments,â\u20AC? and a practically useful algebraic language for the retrieval and manipulation of such objects. Documents are viewed as hierarchical structures; their layout (presentation) aspect is to be treated separately. The syntax and semantics of the language are defined precisely in terms of the formal model, an extended relational algebra.The proposed approach has several new features, some of which are particularly useful for the management of office information. The data model is based on nested sequences of tuples rather than nested relations. Therefore, sorting and sequence operations and the explicit handling of duplicates can be described by the model. Furthermore, this is the first model based on a many-sorted instead of a one-sorted algebra, which means that atomic data values as well as nested structures are objects of the algebra. As a consequence, arithmetic operations, aggregate functions, and so forth can be treated inside the model and need not be introduced as query language extensions to the model. Many-sorted algebra also allows arbitrary algebra expressions (with Boolean result) to be admitted as selection or join conditions and the results of arbitrary expressions to be embedded into tuples. In contrast to other formal models, this algebra can be used directly as a rich query language for office documents with precisely defined semantics."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/23644","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/23644","fieldValue":"ACM"}