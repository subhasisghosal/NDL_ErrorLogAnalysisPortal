{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18822","fieldValue":" We implement W-function approximation scheme described by Barry et al. A range of tests of the approximations is included so that the code can be assessed on any given machine. Users can calculate W(x) by specifying x itself or by specifying an offset from âˆ\u2019exp(âˆ\u20191), the latter option necessitated by rounding errors that can arise for x close to âˆ\u2019exp(âˆ\u20191). Results of running the code on a SUN workstation are included."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18822","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18822","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18823","fieldValue":" A rejection algorithm that uses a new method for constructing simple hat functions for a unimodal, bounded density f is introduced called â\u20ACœtransformed density rejection.â\u20AC? It is based on the idea of transforming f with a suitable transformation T such that T(f(x)) is concave. f is then called T-concave, and tangents of T(f(x)) in the mode and in a point on the left and right side are used to construct a hat function with a table-mountain shape. It is possible to give conditions for the optimal choice of these points of contact. With T= -1\/xxx, the method can be used to construct a universal algorithm that is applicable to a large class of unimodal distributions, including the normal, beta, gamma, and t-distribution."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18823","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18823","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18824","fieldValue":" A stochastic algorithm is presented for finding the global optimum of a function of n variables subject to general constraints. The algorithm is intended for moderate values of n, but it can accommodate objective and constraint functions that are discontinuous and can take advantage of parallel processors. The performance of this algorithm is compared to that of the Nelder-Mead Simplex algorithm and a Simulated Annealing algorithm on a variety of nonlinear functions. In addition, one-, two-, four-, and eight-processor versions of the algorithm are compared using 64 of the nonlinear problems with constraints collected by Hock and Schittkowski. In general, the algorithm is more robust than the Simplex algorithm, but computationally more expensive. The algorithm appears to be as robust as the Simulated Annealing algorithm, but computationally cheaper. Issues discussed include algorithm speed and robustness, applicability to both computer and mathematical models, and parallel efficiency."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18824","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18824","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18825","fieldValue":" Portable Fortran subroutines computing the Fermi-Dirac integral Fjx and the incomplete Fermi-Dirac integral Fjx,b are presented. For the first time a set of series expansions is implemented allowing these special functions to be evaluated efficiently within a prescribed accuracy for real "}