{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/6407","fieldValue":" Random access memory (RAM) is tightly constrained in the least expensive, lowest-power embedded systems such as sensor network nodes and portable consumer electronics. The most widely used sensor network nodes have only 4 to 10KB of RAM and do not contain memory management units (MMUs). It is difficult to implement complex applications under such tight memory constraints. Nonetheless, price and power-consumption constraints make it unlikely that increases in RAM in these systems will keep pace with the increasing memory requirements of applications. We propose the use of automated compile-time and runtime techniques to increase the amount of usable memory in MMU-less embedded systems. The proposed techniques do not increase hardware cost, and require few or no changes to existing applications. We have developed runtime library routines and compiler transformations to control and optimize the automatic migration of application data between compressed and uncompressed memory regions, as well as a fast compression algorithm well suited to this application. These techniques were experimentally evaluated on Crossbow TelosB sensor network nodes running a number of data-collection and signal-processing applications. Our results indicate that available memory can be increased by up to 50&percnt; with less than 10&percnt; performance degradation for most benchmarks."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/6407","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/6407","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/6408","fieldValue":" Distributed smart cameras (DSC) are an emerging technology for a broad range of important applications including smart rooms, surveillance, entertainment, tracking, and motion analysis. By having access to many views and through cooperation among the individual cameras, these DSCs have the potential to realize many more complex and challenging applications than single-camera systems. This article focuses on the system-level software required for efficient streaming applications on single smart cameras as well as on networks of DSCs. Embedded platforms with limited resources do not provide middleware services well known on general-purpose platforms. Our software framework supports transparent intra- and interprocessor communication while keeping the memory and computation overhead very low. The software framework is based on a publisher--subscriber architecture and provides mechanisms for dynamically loading and unloading software components as well as for graceful degradation in case of software- and hardware-related faults. The software framework has been completely implemented and tested on our embedded smart cameras consisting of an ARM-based network processor and several digital signal processors. Two case studies demonstrate the feasibility of our approach."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/6408","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/6408","fieldValue":"ACM"}{"fieldName":"dc.relation.haspart","informationCode":"ERR_FORMAT_HASPART","handle":"12345678_acm\/1536","fieldValue":"[{\"visible\":false,\"sortKey\":\"January 2015\",\"expandable\":true,\"handle\":\"12345678_acm\/1582\",\"title\":\"Issue 4, January 2015\"},{\"visible\":false,\"sortKey\":\"October 2014\",\"expandable\":true,\"handle\":\"12345678_acm\/1581\",\"title\":\"Issue 3, October 2014\"},{\"visible\":false,\"sortKey\":\"June 2014\",\"expandable\":true,\"handle\":\"12345678_acm\/1580\",\"title\":\"Issue 2, June 2014\"},{\"visible\":false,\"sortKey\":\"February 2014\",\"expandable\":true,\"handle\":\"12345678_acm\/1579\",\"title\":\"Issue 1, February 2014\"}]"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/6409","fieldValue":" Publisher Note: This Guest Editorial by Li and Pande describes a number of related articles originally intended as a special issue but which were published in earlier issues as follows: Auerbach et al., \"Low-Latency Time-Portable Real-Time Programming with Exotasks\", appears in TECS 8(2) Article 15 DOI 10.1145\/1457255.1457262 Murray et al., \"Code Transformation and Instruction Set Extension\", appears in TECS 8(4) Article 26 DOI 10.1145\/1550987.1550989 Ahn and Paek, \"Register Coalescing Techniques for Heterogeneous Register Architecture with Copy Sifting\", appears in TECS 8(2) Article 16 DOI 10.1145\/1457255.1457263 Yan and Zhang, \"Analyzing the Worst-Case Execution Time for Instruction Caches with Prefetching\", appears in TECS 8(1) Article 7 DOI 10.1145\/1457246.1457253 "}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/6409","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/6409","fieldValue":"ACM"}