{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18050","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18050","fieldValue":"ACM"}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/18051","fieldValue":"Remark on â\u20ACœAlgorithm 487: Exact Cumulative Distribution of the Kolmogorov-Smirnov Statistic for Small Samples [S14]â\u20AC?"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18051","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18051","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18052","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18052","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18053","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18053","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2691","fieldValue":" We study algorithms for spectral graph sparsification. The input is a graph G with n vertices and m edges, and the output is a sparse graph &Gtilde; that approximates G in an algebraic sense. Concretely, for all vectors x and any &epsi; > 0, the graph &Gtilde; satisfies (1-&epsi; $)x^T $L_Gx â\u2030¤ xT L&Gtilde;x â\u2030¤ (1+&epsi;)xT LGx, where LG$ and &Gtilde; are the Laplacians of G and &Gtilde; respectively. The first contribution of this article applies to all existing sparsification algorithms that rely on solving solving linear systems on graph Laplacians. These algorithms are the fastest known to date. Specifically, we show that less precision is required in the solution of the linear systems, leading to speedups by an O(log n) factor. We also present faster sparsification algorithms for slightly dense graphs: â\u20AC\u201D An O(mlog n) time algorithm that generates a sparsifier with O(nlog 3n\/&epsi;2) edges. â\u20AC\u201D An O(mlog log n) time algorithm for graphs with more than nlog 5nlog log n edges. â\u20AC\u201D An O(m) algorithm for graphs with more than nlog 10n edges. â\u20AC\u201D An O(m) algorithm for unweighted graphs with more than nlog 8$n edges. These bounds hold up to factors that are in O(poly(log log n)) and are conjectured to be removable."}