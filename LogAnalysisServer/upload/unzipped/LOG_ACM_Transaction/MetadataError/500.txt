{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/12560","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/12560","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/12561","fieldValue":" For a Boolean function f&colon; {0, $1}^n â\u2020\u2019 {0, 1}, let &fcirc; be the unique multilinear polynomial such that f(x) &equals; &fcirc;(x) holds for every x âˆˆ {0, 1}n$. We show that, assuming VP â\u2030  VNP, there exists a polynomial-time computable f such that &fcirc; requires superpolynomial arithmetic circuits. In fact, this f can be taken as a monotone 2-CNF, or a product of affine functions. This holds over any field. To prove the results in characteristic 2, we design new VNP-complete families in this characteristic. This includes the polynomial $EC_n counting edge covers in a graph and the polynomial mcliquen$ counting cliques in a graph with deleted perfect matching. They both correspond to polynomial-time decidable problems, a phenomenon previously encountered only in characteristic â\u2030  2."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/12561","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/12561","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/12562","fieldValue":" A proof system for a language L is a function f such that Range(f) is exactly L. In this article, we look at proof systems from a circuit complexity point of view and study proof systems that are computationally very restricted. The restriction we study is proof systems that can be computed by bounded fanin circuits of constant depth $(NC^0) or of O(logâ\u20AC\u2030logâ\u20AC\u2030n) depth but with O(1) alternations (poly log AC0). Each output bit depends on very few input bits; thus such proof systems correspond to a kind of local error correction on a theorem-proof pair. We identify exactly how much power we need for proof systems to capture all regular languages. We show that all regular languages have poly log AC0 proof systems, and from a previous result (Beyersdorff et al. &lsqb;2011a&rsqb;, where NC0 proof systems were first introduced), this is tight. Our technique also shows that Maj has poly log AC0 proof system. We explore the question of whether Taut has NC0 proof systems. Addressing this question about 2TAUT, and since 2TAUT is closely related to reachability in graphs, we ask the same question about Reachability. We show that if Directed reachability has NC0 proof systems, then so does 2TAUT. We then show that both Undirected Reachability and Directed UnReachability have NC0 proof systems, but Directed Reachability is still open. In the context of how much power is needed for proof systems for languages in NP, we observe that proof systems for a good fraction of languages in NP do not need the full power of AC0; they have SAC0 or coSAC0$ proof systems."}{"fieldName":"dc.description","informationCode":"ERR_FOUND_HTML_TAG","handle":"12345678_acm\/12562","fieldValue":"Author Affiliation: Max Planck Institute for Informatics, Saarbr&#252;cken, Germany (Sreenivasaiah, Karteek); Indian Institute of Technology, Bombay, India (Limaye, Nutan); The Institute of Mathematical Sciences, Chennai, India (Mahajan, Meena); University of T&#252;bingen, Germany (Krebs, Andreas)"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/12562","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/12562","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/12563","fieldValue":" In this article, we explore the noncommutative analogues, $VP_nc and VNPnc, of Valiantâ\u20AC™s algebraic complexity classes and show some striking connections to classical formal language theory. Our main results are the following: â\u20AC\u201D We show that Dyck polynomials (defined from the Dyck languages of formal language theory) are complete for the class VPnc under â\u2030¤ abp reductions. To the best of our knowledge, these are the first natural polynomial families shown to be VPnc-complete. Likewise, it turns out that PAL (palindrome polynomials defined from palindromes) are complete for the class VSKEWnc (defined by polynomial-size skew circuits) under â\u2030¤ abp reductions. The proof of these results is by suitably adapting the classical Chomsky-SchÃ¼tzenberger theorem showing that Dyck languages are the hardest CFLs. â\u20AC\u201D Assuming that VPnc â\u2030  VNPnc, we exhibit a strictly infinite hierarchy of p-families, with respect to the projection reducibility, between the complexity classes VPnc and VNPnc (analogous to Ladnerâ\u20AC™s theorem [Ladner 1975]). â\u20AC\u201D Additionally, inside VPnc, we show that there is a strict hierarchy of p-families (based on the nesting depth of Dyck polynomials) with respect to the â\u2030¤abp$ reducibility (defined explicitly in this article)."}