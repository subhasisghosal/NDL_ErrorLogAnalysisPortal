{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2321","fieldValue":" An ordinal tree is an arbitrary rooted tree where the children of each node are ordered. Succinct representations for ordinal trees with efficient query support have been extensively studied. The best previously known result is due to Geary et al. [2004b, pages 1--10]. The number of bits required by their representation for an n-node ordinal tree T is 2n + o(n), whose first-order term is information-theoretically optimal. Their representation supports a large set of O(1)-time queries on T. Based upon a balanced string of 2n parentheses, we give an improved 2n + o(n)-bit representation for T. Our improvement is two-fold: First, the set of O(1)-time queries supported by our representation is a proper superset of that supported by the representation of Geary, Raman, and Raman. Second, it is also much easier for our representation to support new queries by simply adding new auxiliary strings."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/2321","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/2321","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/13990","fieldValue":" The universal relation model aims at achieving complete access-path independence in relational databases by relieving the user of the need for logical navigation among relations. We clarify the assumptions underlying it and explore the approaches suggested for implementing it.The essential idea of the universal relation model is that access paths are embedded in attribute names. Thus attribute names must play unique â\u20ACœroles.â\u20AC? Furthermore, it assumes that for every set of attributes there is a basic relationship that the user has in mind. The user's queries refer to these basic relationships rather than to the underlying database.Two fundamentally different approaches to the universal relation model have been taken. According to the first approach, the user's view of the database is a universal relation or many universal relations, about which the user poses queries. The second approach sees the model as having query-processing capabilities that relieve the user of the need to specify the logical access path. Thus, while the first approach gives a denotational semantics to query answering, the second approach gives it an operational semantics. We investigate the relationship between these two approaches."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/13990","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/13990","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/13991","fieldValue":" Several researchers (Beeri, Bernstein, Chiu, Fagin, Goodman, Maier, Mendelzon, Ullman, and Yannakakis) have introduced a special class of database schemes, called acyclic or tree schemes. Beeri et al. have shown that an acyclic join dependency, naturally defined by an acyclic database scheme, has several desirable properties, and that an acyclic join dependency is equivalent to a conflict-free set of multivalued dependencies. However, since their results are confined to multivalued and join dependencies, it is not clear whether we can handle functional dependencies independently of other dependencies.In the present paper we define an extension of a conflict-free set, called an extended conflict-free set, including multivalued dependencies and functional dependencies, and show the following two properties of an extended conflict-free set:There are three equivalent definitions of an extended conflict-free set. One of them is defined as a set including an acyclic joint dependency and a set of functional dependencies such that the left and right sides of each functional dependency are included in one of the attribute sets that construct the acyclic join dependency.For a relation scheme with an extended conflict-free set, there is a decomposition into third normal form with a lossless join and preservation of dependencies."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/13991","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/13991","fieldValue":"ACM"}{"fieldName":"dc.relation.haspart","informationCode":"ERR_SPACE_MULTIPLE","handle":"12345678_acm\/13640","fieldValue":"[{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13992\",\"title\":\"Designing a Portable Natural Language Database Query System\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13993\",\"title\":\"Practical data-swapping:  the first steps\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13994\",\"title\":\"The Grid File: An Adaptable, Symmetric Multikey File Structure\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13995\",\"title\":\"A Database Management System for the Federal Courts\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13996\",\"title\":\"On Concurrency Control by Multiple Versions\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13997\",\"title\":\"Response Time Analysis of Multiprocessor Computers for Database Support\"},{\"visible\":true,\"expandable\":false,\"handle\":\"12345678_acm\/13998\",\"title\":\"Join and Semijoin Algorithms for a Multiprocessor Database Machine\"}]"}