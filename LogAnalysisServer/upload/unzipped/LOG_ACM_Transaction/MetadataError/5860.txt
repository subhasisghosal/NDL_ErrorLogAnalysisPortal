{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/5556","fieldValue":" We describe a method of assessing the implications for human error on user interface design of safety-critical systems. In previous work we have proposed a taxonomy of influencing factors that contribute to error. In this article, components of the taxonomy are combined into a mathematical and causal model for error, represented as a Bayesian Belief Net (BBN). TheBBN quantifies error influences arising from user knowledge, ability, and the task environ-ment, combined with factors describing the complexity of user action and user interface quality. The BBN model predicts probabilities of different types of errorslips and mistakes for each component action of a task involving user-system interaction. We propose an Impact Analysis Method that involves running test scenarios against this causal model of error in order to determine user interactions that are prone to different types of error. Applying the proposed method will enable the designer to determine the combinations of influencing factors and their interactions that are most likely to influence human error. Finally we show how such scenario-based causal analysis can be useful as a means of focusing on relevant guidelines for safe user interface design. The proposed method is demonstrated through a case study of an operator performing a task using the control system for a laser spectrophotometer.We describe a method of assessing the implications for human error on user interface design of safety-critical systems. In previous work we have proposed a taxonomy of influencing factors that contribute to error. In this article, components of the taxonomy are combined into a mathematical and causal model for error, represented as a Bayesian Belief Net (BBN). TheBBN quantifies error influences arising from user knowledge, ability, and the task environ-ment, combined with factors describing the complexity of user action and user interface quality. The BBN model predicts probabilities of different types of errorslip for each component action of a task involving user-system interaction. We propose an Impact Analysis Method that involves running test scenarios against this causal model of error in order to determine user interactions that are prone to different types of error. Applying the proposed method will enable the designer to determine the combinations of influencing factors and their interactions that are most likely to influence human error. Finally we show how such scenario-based causal analysis can be useful as a means of focusing on relevant guidelines for safe user interface design. The proposed method is demonstrated through a casestudy of an operator performing a task using the control system for a laser spectrophotometer."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/5556","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/5556","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/5557","fieldValue":" In this article we present a method for evaluating and comparing design options for allocating communication media. The method pays particular attention to how such options support cooperation in an interactive safety-critical system. The comparison is performed using threesets of criteria based on task performance, analysis of user deviations and consequent hazards, and coordination. The explicit emphasis on hazards and communication issues, using actual tasks to guide the evaluation, ensures that designers attention is focused on the interactions where problems are likely to occur. We describe an application of the method to the design of access to new communication technology in an air traffic control environment."}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/5557","fieldValue":"Comparing design options for allocating communication media in cooperative safety-critical contexts: a method and a case study"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/5557","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/5557","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/5558","fieldValue":" A user interface software tool helps developers design and implement the user interface. Research on past tools has had enormous impact on today's developersâ\u20AC\u201Dvirtually all applications today are built using some form of user interface tool. In this article, we consider cases of both success and failure in past user interface tools. From these cases we extract a set of themes which can serve as lessons for future work. Using these themes, past tools can be characterized by what aspects of the user interface they addressed, their threshold and ceiling, what path of least resistance they offer, how predictable they are to use, and whether they addressed a target that became irrelevant. We believe the lessons of these past themes are particularly important now, because increasingly rapid technological changes are likely to significantly change user interfaces. We are at the dawn of an era where user interfaces are about to break out of the â\u20ACœdesktopâ\u20AC? box where they have been stuck for the past 15 years. The next millenium will open with an increasing diversity of user interface on an increasing diversity of computerized devices. These devices include hand-held personal digital assistants (PDAs), cell phones, pages, computerized pens, computerized notepads, and various kinds of desk and wall size-computers, as well as devices in everyday objects (such as mounted on refridgerators, or even embedded in truck tires). The increased connectivity of computers, initially evidenced by the World Wide Web, but spreading also with technologies such as personal-area networks, will also have a profound effect on the user interface to computers. Another important force will be recognition-based user interfaces, especially speech, and camera-based vision systems. Other changes we see are an increasing need for 3D and end-user customization, programming, and scripting. All of these changes will require significant support from the underlying user interface sofware tools."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/5558","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/5558","fieldValue":"ACM"}