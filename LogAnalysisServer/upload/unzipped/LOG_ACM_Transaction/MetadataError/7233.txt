{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9283","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9283","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/9284","fieldValue":"Ho, Pin-Han"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9284","fieldValue":" This paper introduces a novel approach, called Short Leap Shared Protection with spare capacity Reallocation (SLSP-R), to deal with dynamic reconfiguration of spare capacity for MPLS-based recovery in the Internet backbone networks. SLSP-R is based on the SLSP framework and is designed to quantify the impact of computation complexity on network performance. The basic idea for SLSP-R is to subdivide a lengthy optimization process into several subtasks in order to trade the optimization quality with computation time. For this purpose, we compare three strategies for grouping working paths before an integer programming (InP) formulation is solved, namely, the Most Overlapped, Most Diverse, and Randomly Distributed. Analytical modeling of the problem is provided to show the feasibility of the subgrouping strategy. A numerical experiment as well as simulation-based study are conducted on four networks with different topology to evaluate the SLSP-R algorithm. The design methodology to determine the size of each subset of working paths is verified in the simulation."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9284","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.subject","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9284","fieldValue":"MPLS"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9284","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9284","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9285","fieldValue":" The Resilient Packet Ring (RPR) IEEE 802.17 standard is a new technology for high-speed backbone metropolitan area networks. A key performance objective of RPR is to simultaneously achieve high utilization, spatial reuse, and fairness, an objective not achieved by current technologies such as SONET and Gigabit Ethernet nor by legacy ring technologies such as FDDI. The core technical challenge for RPR is the design of a bandwidth allocation algorithm that dynamically achieves these three properties. The difficulty is in the distributed nature of the problem, that upstream ring nodes must inject traffic at a rate according to congestion and fairness criteria downstream. Unfortunately, we show that under unbalanced and constant-rate traffic inputs, the RPR fairness algorithm suffers from severe and permanent oscillations spanning nearly the entire range of the link capacity. Such oscillations hinder spatial reuse, decrease throughput, and increase delay jitter. In this paper, we introduce a new dynamic bandwidth allocation algorithm called Distributed Virtual-time Scheduling in Rings (DVSR). The key idea is for nodes to compute a simple lower bound of temporally and spatially aggregated virtual time using per-ingress counters of packet (byte) arrivals. We show that with this information propagated along the ring, each node can remotely approximate the ideal fair rate for its own traffic at each downstream link. Hence, DVSR flows rapidly converge to their ring-wide fair rates while maximizing spatial reuse. To evaluate DVSR, we develop an idealized fairness reference model and bound the deviation in service between DVSR and the reference model, thereby bounding the unfairness. With simulations, we find that compared to current techniques, DVSR's convergence times are an order of magnitude faster (e.g., 2 versus 50 ms), oscillations are mitigated (e.g., ranges of 0.1% versus up to 100%), and nearly complete spatial reuse is achieved (e.g., 0.1% throughput loss versus 33%). Finally, we provide a proof-of-concept implementation of DVSR on a 1 Gb\/s network processor testbed and report the results of testbed measurements."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9285","fieldValue":"{\"eissn\":\"\"}"}