{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/15316","fieldValue":" We introduce an acting-based animation system for creating and editing character animation at interactive speeds. Our system requires minimal training, typically under an hour, and is well suited for rapidly prototyping and creating expressive motion. A real-time motion-capture framework records the user's motions for simultaneous analysis and playback on a large screen. The animator's real-world, expressive motions are mapped into the character's virtual world. Visual feedback maintains a tight coupling between the animator and character. Complex motion is created by layering multiple passes of acting. We also introduce a novel motion-editing technique, which derives implicit relationships between the animator and character. The animator mimics some aspect of the character motion, and the system infers the association between features of the animator's motion and those of the character. The animator modifies the mimic by acting again, and the system maps the changes onto the character. We demonstrate our system with several examples and present the results from informal user studies with expert and novice animators."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/15316","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/15316","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/15317","fieldValue":" Optimization is a promising way to generate new animations from a minimal amount of input data. Physically based optimization techniques, however, are difficult to scale to complex animated characters, in part because evaluating and differentiating physical quantities becomes prohibitively slow. Traditional approaches often require optimizing or constraining parameters involving joint torques; obtaining first derivatives for these parameters is generally an $O(D^2$) process, where D is the number of degrees of freedom of the character. In this paper, we describe a set of objective functions and constraints that lead to linear time analytical first derivatives. The surprising finding is that this set includes constraints on physical validity, such as ground contact constraints. Considering only constraints and objective functions that lead to linear time first derivatives results in fast per-iteration computation times and an optimization problem that appears to scale well to more complex characters. We show that qualities such as squash-and-stretch that are expected from physically based optimization result from our approach. Our animation system is particularly useful for synthesizing highly dynamic motions, and we show examples of swinging and leaping motions for characters having from 7 to 22 degrees of freedom."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/15317","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/15317","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/15318","fieldValue":" By combining a metallic ink and standard inks, one may create printed images having a dynamic appearance: an image viewed under specular reflection may be considerably different from the same image viewed under non-specular reflection. Patterns which are either dark or hidden become highlighted under specular reflection, yielding interesting visual effects. To create such images, one needs to be able to reproduce at non-specular reflection angles the same colors, by standard inks alone or in combination with a metallic ink. Accurate color prediction models need to be established which model the underlying physical phenomena in a consistent manner. To meet this challenge, we propose two models, one for predicting the reflection spectra of standard inks on coated paper and one for predicting the reflection spectra of a combination of standard inks and a metallic ink. They are enhancements of the classical Clapper-Yule model which models optical dot gain of halftone prints by taking into account lateral scattering within the paper bulk and multiple internal reflections. The models we propose also take into account physical dot gain and ink spreading for standard inks as well as the low reflectance of metallic inks at non-specular reflection angles and the poor adherence of standard inks printed on top of a metallic ink (trapping effect). These models open the way towards color separation of images to be reproduced by combining a metallic ink and standard inks. Several designs printed on an offset press demonstrate their applicability and their benefits for high-end design and security applications."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/15318","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/15318","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2451","fieldValue":" We describe a local algorithm for finding subgraphs with high density, according to a measure of density introduced by Kannan and Vinay [1999]. The algorithm takes as input a bipartite graph G, a starting vertex v, and a parameter k, and outputs an induced subgraph of G. It is local in the sense that it does not examine the entire input graph; instead, it adaptively explores a region of the graph near the starting vertex. The running time of the algorithm is bounded by O(Œ\u201D $k^2$), which depends on the maximum degree Œ\u201D, but is otherwise independent of the graph. We prove the following approximation guarantee: for any subgraph S with k‚\u20AC≤ vertices and density Œ∏, there exists a set S‚\u20AC≤ ‚ä\u2020 S for which the algorithm outputs a subgraph with density Œ©(Œ∏\/log Œ\u201D) whenever v &in; S‚\u20AC≤ and k ‚\u2030• k‚\u20AC≤. We prove that S‚\u20AC≤ contains at least half of the edges in S."}