{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/12514","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/12514","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/12515","fieldValue":" If the class TAUT of tautologies of propositional logic has no almost optimal algorithm, then every algorithm A deciding TAUT has a hard sequence, that is, a polynomial time computable sequence witnessing that A is not almost optimal. We show that this result extends to every Î t p-complete problem with t â\u2030¥1; however, assuming the Measure Hypothesis, there is a problem which has no almost optimal algorithm but is decided by an algorithm without hard sequences. For problems Q with an almost optimal algorithm, we analyze whether every algorithm deciding Q, which is not almost optimal, has a hard sequence."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/12515","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/12515","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/12516","fieldValue":" We study two computational problems, parameterised by a fixed tree H. &num;HOMSTO(H) is the problem of counting homomorphisms from an input graph G to H. &num;WHOMSTO(H) is the problem of counting weighted homomorphisms to H, given an input graph G and a weight function for each vertex v of G. Even though H is a tree, these problems turn out to be sufficiently rich to capture all of the known approximation behaviour in &num;P. We give a complete trichotomy for &num;WHOMSTO(H). If H is a star, then &num;WHOMSTO(H) is in FP. If H is not a star but it does not contain a certain induced subgraph J3, then &num;WHOMSTO(H) is equivalent under approximation-preserving (AP) reductions to &num;BIS, the problem of counting independent sets in a bipartite graph. This problem is complete for the class &num;RHÎ 1 under AP-reductions. Finally, if H contains an induced $J_3, then &num;WHOMSTO(H) is equivalent under AP-reductions to &num;SAT, the problem of counting satisfying assignments to a CNF Boolean formula. Thus, &num;WHOMSTO(H) is complete for &num;P under AP-reductions. The results are similar for &num;HOMSTO(H) except that a rich structure emerges if H contains an induced J3$. We show that there are trees H for which &num;HOMSTO(H) is &num;SAT-equivalent (disproving a plausible conjecture of Kelk). However, it is still not known whether &num;HOMSTO(H) is &num;SAT-hard for every tree H which contains an induced J3. It turns out that there is an interesting connection between these homomorphism-counting problems and the problem of approximating the partition function of the ferromagnetic Potts model. In particular, we show that for a family of graphs Jq, parameterised by a positive integer q, the problem &num;HOMSTO(Jq) is AP-interreducible with the problem of approximating the partition function of the q-state Potts model. It was not previously known that the Potts model had a homomorphism-counting interpretation. We use this connection to obtain some additional upper bounds for the approximation complexity of &num;HOMSTO(Jq)."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/12516","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/12516","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/12517","fieldValue":" The following two decision problems capture the complexity of comparing integers or rationals that are succinctly represented in product-of-exponentials notation, or equivalently, via arithmetic circuits using only multiplication and division gates, and integer inputs. Input instance: Four lists of positive integers: a1,..., anâˆˆN+n; b1,...,bnâˆˆN+n; c1,...,cmâˆˆN+m; d1, ..., dmâˆˆN+m; where each of the integers is represented in binary. Problem 1 (equality testing): Decide whether a1b1 a2b2&ctdot;anbn=c1d1 c2d2&ctdot;cmdm. Problem 2 (inequality testing): Decide whether a1b1 a2b2&ctdot;anbnâ\u2030¥c1d1 c2d2&ctdot;cmdm. Problem 1 is easily decidable in polynomial time using a simple iterative algorithm. Problem 2 is much harder. We observe that the complexity of Problem 2 is intimately connected to deep conjectures and results in number theory. In particular, if a refined form of the ABC conjecture formulated by Baker in 1998 holds, or if the older Lang-Waldschmidt conjecture (formulated in 1978) on linear forms in logarithms holds, then Problem 2 is decidable in P-time (in the standard Turing model of computation). Moreover, it follows from the best available quantitative bounds on linear forms in logarithms, namely, by Baker and WÃ¼stholz [1993] or Matveev [2000], that if m and n are fixed universal constants then Problem 2 is decidable in P-time (without relying on any conjectures). This latter fact was observed earlier by Shub [1993]. We describe one application: P-time maximum probability parsing for arbitrary stochastic context-free grammars (where Îµ-rules are allowed)."}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/12517","fieldValue":"A Note on the Complexity of Comparing Succinctly Represented Integers, with an Application to Maximum Probability Parsing"}