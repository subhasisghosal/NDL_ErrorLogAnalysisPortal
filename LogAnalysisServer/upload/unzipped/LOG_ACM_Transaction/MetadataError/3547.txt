{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/21536","fieldValue":" Geographic routing is well suited for large-scale wireless sensor networks (WSNs) because it is nearly stateless. One important challenge is that network holes may arbitrarily increase the routing path length. Fortunately, recent studies have shown that constant path stretch is achievable using nonlocal information. The constant stretch, however, is possible at the cost of high communication and storage overhead: a source node must complete a â\u20ACœpath-setupâ\u20AC? process prior to data transmission by exchanging a message with a destination node using a default geographic routing (e.g., GPSR). In this article, we propose the first geographic routing protocol (LVGR) that provably achieves worst-case stretch of Î˜ (D\/Î³) (where D is the diameter of the network and Î³ is the communication range of nodes) with low communication and storage overhead. LVGR represents a hole as a convex hull, the internal structure of which is represented as a local visibility graph. Based on the convex hulls and local visibility graphs, LVGR generates paths with guaranteed stretch. Through theoretical analysis and extensive simulations, we prove the worst-case stretch of LVGR and demonstrate that LVGR reduces communication overhead by up to 97&percnt; and storage overhead by up to 60&percnt;, compared with the state of the art."}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/21536","fieldValue":"A Low-Stretch-Guaranteed and Lightweight Geographic Routing Protocol for Large-Scale Wireless Sensor Networks"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/21536","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/21536","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/21537","fieldValue":" Off-the-shelf home automation technology is making it easier than ever for people to convert their own homes into smart homes. However, manual configuration is tedious and error-prone. In this article, we present and compare a family of solutions that automatically generate a map of the home and the devices within it using data from the smart home sensors themselves (e.g., light and motion sensors). These solutions can be used to automatically configure home automation systems or to automatically produce an intuitive map-like interface for visualizing sensor data and interacting with controllers. We call our approach Smart Blueprints because it automatically maps out the unique configuration of each smart home. We demonstrate the Smart Blueprints using a variety of sensor combinations, including light sensors, motion sensors, and magnetometers deployed on the doors and\/or windows of the home. For evaluation of each combination on sensor-map generation, we deployed more than 200 sensors in seven different houses at different locations and compared the ability to use a variety of techniques to map out the configuration. We show that, in almost all houses, our system can automatically narrow the configuration down to 1--5 candidates per home using only one week of collected data."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/21537","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/21537","fieldValue":"ACM"}{"fieldName":"dc.relation.haspart","informationCode":"ERR_FORMAT_HASPART","handle":"12345678_acm\/3052","fieldValue":"[{\"visible\":false,\"sortKey\":\"June 2016\",\"expandable\":true,\"handle\":\"12345678_acm\/3063\",\"title\":\"Issue 4, June 2016\"},{\"visible\":false,\"sortKey\":\"March 2016\",\"expandable\":true,\"handle\":\"12345678_acm\/3062\",\"title\":\"Issue 3, March 2016\"},{\"visible\":false,\"sortKey\":\"February 2016\",\"expandable\":true,\"handle\":\"12345678_acm\/3061\",\"title\":\"Issue 2, February 2016\"},{\"visible\":false,\"sortKey\":\"January 2016\",\"expandable\":true,\"handle\":\"12345678_acm\/3060\",\"title\":\"Issue 1, January 2016\"},{\"visible\":false,\"sortKey\":\"December 2015\",\"expandable\":true,\"handle\":\"12345678_acm\/3059\",\"title\":\"Issue 2, December 2015\"},{\"visible\":false,\"sortKey\":\"November 2015\",\"expandable\":true,\"handle\":\"12345678_acm\/3058\",\"title\":\"Issue 1, November 2015\"}]"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/21538","fieldValue":"Tan, Hwee-Pink"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/21538","fieldValue":" Network simulation is an essential tool for the design and evaluation of wireless network protocols, and realistic channel modeling is essential for meaningful analysis. Recently, several network protocols have demonstrated substantial network performance improvements by exploiting the capture effect, but existing models of the capture effect are still not adequate for protocol simulation and analysis. Physical-level models that calculate the signal-to-interference-plus-noise ratio (SINR) for every incoming bit are too slow to be used for large-scale or long-term networking experiments, and link-level models such as those currently used by the NS2 simulator do not accurately predict protocol performance. In this article, we propose a new technique called the capture modeling algorithm (CAMA) that provides the simulation fidelity of physical-level models while achieving the simulation time of link-level models. We confirm the validity of CAMA through comparison with the empirical traces of the experiments conducted by various numbers of CC1000 and CC2420-based nodes in different scenarios. Our results indicate that CAMA can accurately predict the packet reception, corruption, and collision detection rates of real radios, while existing models currently used by the NS2 simulator produce substantial prediction error."}