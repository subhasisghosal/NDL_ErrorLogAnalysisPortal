{"fieldName":"dc.identifier.other","informationCode":"ERR_FORMAT_DOI","handle":"12345678_acm\/12491","fieldValue":"{\"doi\":\"http:\/\/dx.doi.org\/10.1145\/2462896.2462897\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/12491","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/12491","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/12492","fieldValue":"Scharfenberger-Fabian, Gido"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/12492","fieldValue":" In this paper we initiate the study of proof systems where verification of proofs proceeds by $NC^0 circuits. We investigate the question which languages admit proof systems in this very restricted model. Formulated alternatively, we ask which languages can be enumerated by NC0 functions. Our results show that the answer to this problem is not determined by the complexity of the language. On the one hand, we construct NC0 proof systems for a variety of languages ranging from regular to NP complete. On the other hand, we show by combinatorial methods that even easy regular languages such as Exact-OR do not admit NC0 proof systems. We also show that Majority does not admit NC0 proof systems. Finally, we present a general construction of NC0$ proof systems for regular languages with strongly connected NFA's."}{"fieldName":"dc.identifier.other","informationCode":"ERR_FORMAT_DOI","handle":"12345678_acm\/12492","fieldValue":"{\"doi\":\"http:\/\/dx.doi.org\/10.1145\/2462896.2462898\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/12492","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/12492","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/12493","fieldValue":" We introduce a concept of parameterizing a problem above the optimum solution of its natural linear programming relaxation and prove that the node multiway cut problem is fixed-parameter tractable (FPT) in this setting. As a consequence we prove that node multiway cut is FPT, when parameterized above the maximum separating cut, resolving an open problem of Razgon. Our results imply $O&ast;(4^k) algorithms for vertex cover above maximum matching and almost 2-SAT as well as an O&ast;(2k$) algorithm for node multiway cut with a standard parameterization by the solution size, improving previous bounds for these problems."}{"fieldName":"dc.identifier.other","informationCode":"ERR_FORMAT_DOI","handle":"12345678_acm\/12493","fieldValue":"{\"doi\":\"http:\/\/dx.doi.org\/10.1145\/2462896.2462899\"}"}