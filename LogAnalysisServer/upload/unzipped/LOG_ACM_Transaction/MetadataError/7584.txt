{"fieldName":"dc.subject","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9977","fieldValue":"WLAN"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9977","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9977","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/1906","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/1906","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9978","fieldValue":" Disruption-tolerant networks (DTNs) rely on intermittent contacts between mobile nodes to deliver packets using a store-carry-and-forward paradigm.We earlier proposed the use of throwbox nodes, which are stationary, battery-powered nodes with storage and processing, to enhance the capacity of DTNs. However, the use of throwboxes without efficient power management is minimally effective. If the nodes are too liberal with their energy consumption, they will fail prematurely. However, if they are too conservative, they may miss important transfer opportunities, hence increasing lifetime without improving performance. In this paper, we present a hardware and software architecture for energy-efficient throwboxes in DTNs. We propose a hardware platform that uses a multitiered, multiradio, scalable, solar-powered platform. The throwbox employs an approximate heuristic for solving the NP-hard problem of meeting an average power constraint while maximizing the number of bytes forwarded by the throwbox. We built and deployed prototype throwboxes in UMass DieselNet, a bus-based DTN testbed. Through extensive trace-driven simulations and prototype deployment, we show that a single throwbox with a $270-cm^2$ solar panel can run perpetually while improving packet delivery by 37% and reducing message delivery latency by at least 10% in the network."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9978","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9978","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9978","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9979","fieldValue":" MPLS recovery mechanisms are increasing in popularity because they can guarantee fast restoration and high QoS assurance. Their main advantage is that their backup paths are established in advance, before a failure event takes place. Most research on the establishment of primary and backup paths has focused on minimizing the added capacity required by the backup paths in the network. However, this so-called Spare Capacity Allocation (SCA) metric is less practical for network operators who have a fixed capacitated network and want to maximize their revenues. In this paper, we present a comprehensive study on restorable throughput maximization in MPLS networks.We present the first polynomial-time algorithms for the splittable version of the problem. For the unsplittable version, we provide a lower bound for the approximation ratio and propose an approximation algorithm with an almost identical bound. We present an efficient heuristic which is shown to have excellent performance. One of our most important conclusions is that when one seeks to maximize revenue, local recovery should be the recovery scheme of choice."}