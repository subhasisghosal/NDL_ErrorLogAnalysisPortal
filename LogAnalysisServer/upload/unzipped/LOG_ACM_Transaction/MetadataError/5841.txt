{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/5507","fieldValue":" We conducted a study to investigate the use of generic versus task-specific application software by people who create and maintain presentation slides. Sixteen people were interviewed to determine how they prepare slides, what software they use to prepare and maintain slides, and how well the software they use supports various aspects of the task. The informants varied in how central slidemaking was to their jobs. The hypotheses driving the study were that: (1) some software applications are task generic, intended for use in a wide variety of tasks, while others are task specific, intended to support very specific tasks; (2) task-specific software is preferable, but is often not used because of cost, learning effort, or lack of availability, and (3) people who infrequently perform a task tend to use generic tools, while people who often perform it tend to use task-specific tools. Our findings suggest that several factors influence choice of slidemaking software, including desired quality, production time, user skill, willingness to use multiple tools, whether people work alone or in teams, and company policy. Furthermore, the task specificity\/genericness of an application program is not a simple matter of degree, because it depends on several fairly independent software design issues. We (1) conclude that developing application software that supports all aspects of a task well is extremely difficult and (2) suggest an alternative approach that may be more fruitful: providing collections of interoperable tools and services."}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/5507","fieldValue":"Creating presentation slides: a study of user preferences for task-specific versus generic application software"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/5507","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/5507","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/5508","fieldValue":" This article presents an overview of GroupKit, a groupware toolkit that lets developers build applications for synchronous and distributed computer-based conferencing. GroupKit was constructed from our belief that programming groupware should be only slightly harder than building functionally similar single-user systems. We have been able to significantly reduce the implementation complexity of groupware through the key features that comprise GroupKit. A runtime infrastructure automatically manages the creation, interconnection, and communications of the distributed processes that comprise conference sessions. A set of groupware programming abstractions allows developers to control the behavior of distributed processes, to take action on state changes, and to share relevant data. Groupware widgets let interface features of value to conference participants to be easily added to groupware applications. Session managersâ\u20AC\u201Dinterfaces that let people create and manage their meetingsâ\u20AC\u201Dare decoupled from groupware applications and are built by developers to accommodate the group's working style. Example GroupKit applications in a variety of domains have been implemented with only modest effort."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/5508","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/5508","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/5509","fieldValue":" A new method is presented for performing rapid and accurate numerical estimation. The method is derived from an area of human cognitive psychology called preattentive processing. Preattentive processing refers to an initial organization of the visual field based on cognitive operations believed to be rapid, automatic, and spatially parallel. Examples of visual features that can be detected in this way include hue, intensity, orientation, size, and motion. We beleive that studies from preattentive vision should be used to assist in the design of visualization tools, especially those for which high-speed target detection, boundary identification, and region detection are important. In our present study, we investigated two known preattentive features (hue and orientation) in the context of a new task (numerical estimation) in order to see whether preattentive estimation was possible. Our experiments tested displays that were designed to visualize data from salmon migration simulations. The results showed that rapid and accurate estimation was indeed possible using either hue or orientation. Furthermore, random variation in one of these features resulted in no interference when subjects estimated the percentage of the other. To test the generality of our results, we varied two important display parametersâ\u20AC\u201Ddisplay duration and feature differenceâ\u20AC\u201Dand found boundary conditions for each. Implications of our results for application to real-world data and tasks are discussed."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/5509","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/5509","fieldValue":"ACM"}