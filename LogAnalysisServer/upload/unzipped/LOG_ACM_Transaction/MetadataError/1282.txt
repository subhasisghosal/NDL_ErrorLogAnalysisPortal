{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/14993","fieldValue":" The continuity properties of recursively generated B-spline surfaces over an arbitrary topology have been related to the eigenproperties of the local subdivision transformation. In this paper a discrete Fourier transform technique is employed to derive these eigenproperties for a general choice of subdivision weightings. Conditions on these weightings are identified for tangent plane continuity at the extraordinary points and a geometric interpretation is given."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/14993","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/14993","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/14994","fieldValue":" Raster graphics displays are almost always refreshed out of a frame buffer in which a digital representation of the currently visible image is kept. The availability of the frame buffer as a two-dimensional memory array representing the displayable area in a screen coordinate system has motivated the development of algorithms that take advantage of this memory for more than just picture storage. The classic example of such an algorithm is the depth buffer algorithm for determining visible surfaces of a three-dimensional scene. This paper constitutes a first attempt at a disciplined analysis of the power of a frame buffer seen as a computational engine for use in graphics algorithms. We show the inherent power of frame buffers to perform a number of graphics algorithms in terms of the number of data fields (registers) required per pixel, the types of operations allowed on these registers, and the input data. In addition to upper bounds given by these algorithms, we prove lower bounds for most of them and show most of these algorithms to be optimal.One result of this study is the introduction of new frame buffer algorithms for computing realistic shadows and for determining the convex intersection of half spaces, an operation important in computational geometry and in rendering objects defined using planes rather than polygons. Another result is that it shows clearly the relationships between different and important areas of research in computer graphics, such as visible surface determination, compositing, and hardware for smart frame buffers."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/14994","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/14994","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/14995","fieldValue":" We present a study of a highly decomposable algorithm useful for the parallel generation of a contour surface display. The core component of this algorithm is a two-dimensional contouring algorithm that operates on a single 2 x 2 subgrid of a larger grid. An intuitive procedure for the operations used to generate the contour lines for a subgrid is developed. A data structure, the contouring tree, is introduced as the basis of a new algorithm for generating the contour lines for the subgrid. The construction of the contouring tree is detailed. Space requirements for the contouring tree algorithm are described for particular implementations."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/14995","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/14995","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/14996","fieldValue":" New single- and multiprocessor models for ray tracing are presented. Important features are (1) the use of custom VLSI building blocks, (2) the use of a modified hierarchical data-structure-based ray tracing algorithm with three disjoint data sets, and (3) scene access through adaptive information broadcasting. A modular design is presented that permits incremental performance enhancement up to two orders of magnitude over conventional minicomputers or workstations. Ray tracing is a surprisingly good application for a shared bus architecture because of the computational complexity of intersecting light rays with graphics objects."}