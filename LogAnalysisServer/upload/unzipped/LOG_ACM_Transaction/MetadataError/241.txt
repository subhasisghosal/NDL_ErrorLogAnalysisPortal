{"fieldName":"dc.subject","informationCode":"ERR_FOUND_HTML_TAG","handle":"12345678_acm\/11684","fieldValue":"&omega;-categoricity"}{"fieldName":"dc.subject","informationCode":"WARN_ALL_WORD_LOWER","handle":"12345678_acm\/11684","fieldValue":"&omega;-categoricity"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11684","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/11684","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/11685","fieldValue":" We study confluence and the Church-Rosser property in term rewriting and Î»-calculus with explicit bounds on term sizes and reduction lengths. Given a system R, we are interested in the lengths of the reductions in the smallest valleys t â\u2020\u2019 &ast; sâ\u20AC² &ast; â\u2020? tâ\u20AC² expressed as a function: â\u20AC\u201Dfor confluence a function $vs_R(m, n) where the valleys are for peaks t â\u2020? s â\u2020\u2019 &ast; tâ\u20AC² with s of size at most m and the reductions of maximum length n, and â\u20AC\u201Dfor the Church-Rosser property a function cvsR(m,n) where the valleys are for conversions t â\u2020\u201D &ast; tâ\u20AC² with t and tâ\u20AC² of size at most m and the conversion of maximum length n. For confluent Term Rewriting Systems (TRSs), we prove that vsR is a total computable function, and for linear such systems that cvsR is a total computable function. Conversely, we show that every total computable function is the lower bound on the functions vsR(m, n) and cvsR(m,n) for some TRS R: In particular, we show that for every total computable function &phiv;: N â\u2020\u2019 N there is a TRS R with a single term s such that vsR(&verbar;s&verbar;, n) â\u2030¥ &phiv;(n) and cvsR(n, n) â\u2030¥ &phiv;(n) for all n. For orthogonal TRSs R we prove that there is a constant k such that: (a) vsR(m, n) is bounded from above by a function exponential in k and (b) cvsR(m, n) is bounded from above by a function in the fourth level of the Grzegorczyk hierarchy. Similarly, for Î»-calculus, we show that vsR$(m,n) is bounded from above by a function in the fourth level of the Grzegorczyk hierarchy."}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/11685","fieldValue":"Least upper bounds on the size of confluence and church-rosser diagrams in term rewriting and Î»-calculus"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11685","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/11685","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/11686","fieldValue":" Logical relations are a central concept used to study various higher-order type theories and occur frequently in the proofs of a wide variety of meta-theorems. Besides extending the logical relation principle to more general languages, an important research question has been how to represent and thus verify logical relation arguments in logical frameworks. We formulate a theory of logical relations for Dependent Type Theory (DTT) with Î² Î·-equality which guarantees that any valid logical relation satisfies the Basic Lemma. Our definition is syntactic and reflective in the sense that a relation at a type is represented as a DTT type family but also permits expressing certain semantic definitions. We use the Edinburgh Logical Framework (LF) incarnation of DTT and implement our notion of logical relations in the type-checker Twelf. This enables us to formalize and mechanically decide the validity of logical relation arguments. Furthermore, our implementation includes a module system so that logical relations can be built modularly. We validate our approach by formalizing and verifying several syntactic and semantic meta-theorems in Twelf. Moreover, we show how object languages encoded in DTT can inherit a notion of logical relation from the logical framework."}{"fieldName":"dc.subject","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/11686","fieldValue":"LF"}