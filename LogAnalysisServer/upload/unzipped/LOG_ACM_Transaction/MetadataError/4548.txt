{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/24757","fieldValue":" Many similar algorithms for performing simulations of hard-sphere have been presented. Among these algorithms are those designed by Rapaport (RAP), Lubachevsky (LUB), Krantz (HAD), and Marin (HYBRID). These algorithms exhibit a similar design in that they each use an O(logn) event queue which becomes the overwhelming bottleneck when simulating large systems. In this paper the design of HAD is presented and contrasted to RAP, LUB and HYBRID. Next, both an empirical and analytic analysis of HAD's performance are presented which show that HAD scales well. Finally, using the design differences of these algorithms, the performance of HAD is compared to RAP, LUB and HYBRID."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/24757","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/24757","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/24758","fieldValue":" This article describes an approach to discrete event simulation modeling that appears to be effective for developing portable and efficient parallel execution of models of large distributed systems and communication networks. In this approach, the modeler develops submodels with an existing sequential simulation modeling tool, using the full expressive power of the tool. A set of modeling language extensions permits automatically sychronized communication between submodels; however, the automation requires that any such communication must take a nonzero amount of simulation time. Within this modeling paradigm, a variety of conservative synchronization protocols can transparently support conservative execution of submodels on potentially different processors. A specific implementation of this approach, U.P.S. (Utilitarian Parallel Simulator), is described, along with performance results on the Intel Paragon and on the IBM SP2."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/24758","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/24758","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/24759","fieldValue":"Yang, Wei-Ning"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/24759","fieldValue":"Liou, Wei-Win"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/24759","fieldValue":" Antithetic variates and control variates are two well-known variance reduction techniques. We consider combining antithetic variates and control variates to estimate the mean response in a stochastic simulation experiment. When applying antithetic variates to generate control variates across paired replications, we show that the integrated control-variate estimator is unbiased and yields, under the assumption of common correlations induced for all control variates, a smaller variance than the conventional control-variate estimator without using antithetic variates. We examine the proposed estimator and two alternative integrated control-variate estimators when applying antithetic variates on control variates and show that the proposed estimator is the optimal integrated control-variate estimator We implement these three integrated control-variate estimators and the conventional control-variate estimator in a simulation model of a stochastic network to evaluate the performance of each control-variate estimator Empirical results show that the proposed estimator outperforms the other control-variate estimators."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/24759","fieldValue":"ACM"}