{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/14979","fieldValue":" Description: The incrementor is a visually compact, flexible, and consistent mechanism for modifying the variables presented to the user. A locator (i.e., mouse) with two buttons is the required input device. The names of the variables appear in the center of one or two pairs of arrows, and the value of the variable appears just below the right arrow and to the left of the up arrow (Figures 1 and 2)."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/14979","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/14979","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/14980","fieldValue":" Recently there has been a great deal of interest in the use of â\u20ACœtensionâ\u20AC? parameters to augment control mesh vertices as design handles for piecewise polynomials. A particular local cubic basis called B-splines, which has been termed a â\u20ACœgeneralization of B-splines, v has been proposed as an appropriate basis. These functions are defined only for floating knot sequences. This paper uses the known property of B-splines that with appropriate knot vectors span what are called here spaces of tensioned splines, and that particular combinations of them, called LT-splines, form bases for the spaces of tensioned splines. In addition, this paper shows that these new proposed bases have the variation diminishing property, the convex hull property, and straightforward knot insertion algorithms, and that both curves and individual basis functions can be easily computed. Sometimes it is desirable to interpolate points and also use these tension parameters, so interpolation methods using the LT-spline bases are presented. Finally, the above properties are established for uniform and nonuniform knot vectors, open and floating end conditions, and homogeneous and nonhomogeneous tension parameter pairs."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/14980","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/14980","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/14981","fieldValue":" The increasing availability of affordable color raster graphics displays has made it important to develop a better understanding of how color can be used effectively in an interactive environment. Most contemporary graphics displays offer a choice of some 16 million colors; the user's problem is to find the right color.Folklore has it that the RGB color space arising naturally from color display hardware is user-hostile and that other color models such as the HSV scheme are preferable. Until now there has been virtually no experimental evidence addressing this point.We describe a color matching experiment in which subjects used one of two tablet-based input techniques, interfaced through one of five color models, to interactively match target colors displayed on a CRT.The data collected show small but significant differences between models in the ability of subjects to match the five target colors used in this experiment. Subjects using the RGB color model matched quickly but inaccurately compared with those using the other models. The largest speed difference occurred during the early convergence phase of matching. Users of the HSV color model were the slowest in this experiment, both during the convergence phase and in total time to match, but were relatively accurate. There was less variation in performance during the second refinement phase of a match than during the convergence phase.Two-dimensional use of the tablet resulted in faster but less accurate performance than did strictly one-dimensional usage.Significant learning occurred for users of the Opponent, YIQ, LAB, and HSV color models, and not for users of the RGB color model."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/14981","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/14981","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/14982","fieldValue":" This paper describes a technique for approximating real-valued pixels by two-valued pixels. The new method, called dot diffusion, appears to avoid some deficiencies of other commonly used techniques. It requires approximately the same total number of arithmetic operations as the Floyd-Steinberg method of adaptive grayscale, and it is well suited to parallel computation; but it requires more buffers and more complex program logic than other methods when implemented sequentially. A â\u20ACœsmoothâ\u20AC? variant of the method may prove to be useful in high-resolution printing."}