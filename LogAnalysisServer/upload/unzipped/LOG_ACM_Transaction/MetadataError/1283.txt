{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/14996","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/14996","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/14997","fieldValue":"Fielding, E. V C"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/14997","fieldValue":" Implicit regeneration is a fundamental concept of the Graphical Kernel System (GKS), an IS0 International Standard, but it is difficult to understand as presented in the English language specification of GKS. Consequently, it is a good example to use in determining whether formal specification techniques can be used effectively to describe and clarify graphics concepts of this kind. The problem is first motivated informally with a description of GKS concepts and terminology. A formal specification of implicit regeneration using a simplified model is then presented, and the notation that is used for its formalization (VDM) is described. Finally, properties of implicit regeneration are formulated and the specification is proved to conform to these properties. This demonstrates the applicability of formal specification to graphics software, because a sufficiently precise description of a complicated concept is provided that enables its consistency to be checked against an intuitive understanding of the concept as derived from the GKS document."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/14997","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/14997","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/14998","fieldValue":"DeRose, Tony D."}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/14998","fieldValue":" This paper describes two algorithms for solving the following general problem: Given two polynomial maps f: Rn &map; RN and S RN &map; Rd in BÃ©zier simplex form, find the composition map &Stilde; = S Â° f in BÃ©zier simplex form (typically, n â\u2030¤ N â\u2030¤ d â\u2030¤ 3). One algorithm is more appropriate for machine implementation, while the other provides somewhat more geometric intuition. The composition algorithms can be applied to the following problems: evaluation, subdivision, and polynomial reparameterization of BÃ©zier simplexes; joining BÃ©zier curves with geometric continuity of arbitrary order; and the determination of the control nets of BÃ©zier curves and triangular BÃ©zier surface patches after they have undergone free-form deformations."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/14998","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/14998","fieldValue":"ACM"}