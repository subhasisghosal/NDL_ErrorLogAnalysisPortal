{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9636","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9637","fieldValue":" We study limitations of an equation-based congestion control protocol, called TCP-Friendly Rate Control (TFRC). It examines how the three main factors that determine TFRC throughput, namely, the TCP-friendly equation, loss event rate estimation, and delay estimation, can influence the long-term throughput imbalance between TFRC and TCP. Especially, we show that different sending rates of competing flows cause these flows to experience different loss event rates. There are several fundamental reasons why TFRC and TCP flows have different average sending rates, from the first place. Earlier work shows that the convexity of the TCP-friendly equation used in TFRC causes the sending rate difference. We report two additional reasons in this paper: 1) the convexity of 1\/x where x is a loss event period and 2) different retransmission timeout period (RTO) estimations of TCP and TFRC. These factors can be the reasons for TCP and TFRC to experience initially different sending rates. But we find that the loss event rate difference due to the differing sending rates greatly amplifies the initial throughput difference; in some extreme cases, TFRC uses around 20 times more, or sometimes 10 times less, bandwidth than TCP. Despite these factors influencing the throughput difference, we also find that simple heuristics can greatly mitigate the problem."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9637","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9637","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9637","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9638","fieldValue":" In this paper, we propose a sender side modification to TCP to accommodate small network buffers. We exploit the fact that the manner in which network buffers are provisioned is intimately related to the manner in which TCP operates. However, rather than designing buffers to accommodate the TCP AIMD algorithm, as is the traditional approach in network design, we suggest simple modifications to the AIMD algorithm to accommodate buffers of any size in the network. We demonstrate that networks with small buffers can be designed that transport TCP traffic in an efficient manner while retaining fairness and friendliness with standard TCP traffic."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9638","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.subject","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9638","fieldValue":"AIMD"}{"fieldName":"dc.subject","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9638","fieldValue":"TCP"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9638","fieldValue":"ACM"}