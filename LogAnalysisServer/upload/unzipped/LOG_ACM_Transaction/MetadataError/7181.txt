{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9182","fieldValue":" Precomputation-based methods have recently been proposed as an instrument to facilitate scalability, improve response time, and reduce computation load on network elements. The key idea is to effectively reduce the time needed to handle an event by performing a certain amount of computations in advance, i.e., prior to the event's arrival. Such computations are performed as background processes, thus enabling to promptly provide a solution upon a request, through a simple, fast procedure.In this paper, we investigate precomputation methods in the context of Quality-of-Service (QoS) routing. Precomputation is highly desirable for QoS routing schemes due to the high computation complexity of selecting QoS paths on the one hand, and the need to promptly provide a satisfactory path upon a request on the other hand. We consider two major settings of QoS routing. The first is the case where the QoS constraint is of the \"bottleneck\" type, e.g., a bandwidth requirement, and network optimization is sought through hop minimization. The second is the more general setting of \"additive\" QoS constraints (e.g., delay) and general link costs.This paper mainly focuses on the first setting. First, we show that, by exploiting the typical hierarchical structure of large-scale networks, one can achieve a substantial improvement in terms of computational complexity. Next, we consider networks with topology aggregation. We indicate that precomputation is a necessary element for any QoS routing scheme and establish a precomputation scheme appropriate for such settings. Finally, we consider the case of additive QoS constraints (e.g., delay) and general link costs. As the routing problem becomes NP-hard, we focus on Îµ-optimal approximations and derive a precomputation scheme that offers a major improvement over the standard approach."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9182","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9182","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9182","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9183","fieldValue":" Weighted fair queueing (WFQ)-based packet scheduling schemes require processing at line speeds for tag computation and tag sorting. This requirement presents a bottleneck for their implementation at high transmission speeds. In this paper, we propose an alternative and lower complexity approach to packet scheduling, based on modifications of the classical round-robin scheduler. Contrary to conventional belief, we show that appropriate modifications of the weighted round-robin (WRR) service discipline can, in fact, provide tight fairness properties and efficient delay guarantees to multiple sessions. Two such modifications are described: 1) list-based round robin, in which the server visits different sessions according to a precomputed list which is designed to obtain the desirable scheduling properties and 2) multiclass round robin, a version of hierarchical round robin with controls designed for good scheduling properties. The schemes considered are compared with well-known WFQ schemes and with deficit round robin (a credit-based WRR), on the basis of desirable properties such as bandwidth guarantees, fairness in excess bandwidth sharing, worst-case fairness, and efficiency of latency (delay guarantee) tuning. The scheduling schemes proposed and analyzed here operate with fixed packet sizes, and hence can be used in applications such as cell scheduling in ATM networks, time-slot scheduling on wireless links as in GPRS air interface, etc. A credit-based extension of the proposed schemes to handle variable packet sizes is also possible."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9183","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9183","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9183","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9184","fieldValue":" In this paper, we develop a model to quantify the performance of message transmission systems in which users must reserve transmission resources via a contention mechanism prior to transmission. Our work is motivated by a desire to understand the performance characteristics of systems such as the General Packet Radio Service (GPRS), where the single forward link of the wireless access system is organized as a sequence of frames, each of which has first a contention period and then a service period. There are a fixed number of fixed-length contention slots in each contention period. Each contending customer chooses the slot in which he will contend at random, and success is determined by a capture model. A contender who fails waits for the next contention period, then again chooses the slot in which he will contend at random; this process is repeated until the contender is successful. Customers who have contended successfully are served during the service period, which has a prescribed number of fixed-length slots, on a first-come-first-serve (FCFS) basis, with the required number of service units being drawn independently from a general discrete distribution having finite support. We model the system as a Markov renewal process embedded at service departure times. We solve the model and then compute the equilibrium distributions of the number of customers in the system at arbitrary points in time and at customer arrival epochs. Finally, we give a numerical example in which we demonstrate the usefulness of our results in understanding the behavior of GPRS."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9184","fieldValue":"{\"eissn\":\"\"}"}