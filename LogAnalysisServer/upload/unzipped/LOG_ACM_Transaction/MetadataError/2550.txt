{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18602","fieldValue":" A new selection is made for an efficient two-step block Runge-Kutta formula of order 6. The new formula is developed using some of the efficiency criteria recently investigated by Shampine, and as a result, a block formula with much improved performance is obtained. An important property of this new formula is that there is a ‚\u20ACúnatural‚\u20AC? interpolating polynomial available. This can be used to compute approximate solution values at off-step points without the need to compute any additional function evaluations. The quality of this interpolant is examined, and it is shown to have certain desirable properties. The performance of the new block Runge-Kutta formula is evaluated using the DETEST test set and is shown to be more efficient than certain other standard Runge-Kutta formulas for this particular test set."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18602","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18602","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2748","fieldValue":" The Lopsided Lov√°sz Local Lemma (LLLL) is a powerful probabilistic principle that has been used in a variety of combinatorial constructions. While this principle began as a general statement about probability spaces, it has recently been transformed into a variety of polynomial-time algorithms. The resampling algorithm of Moser and Tardos [2010] is the most well-known example of this. A variety of criteria have been shown for the LLLL; the strongest possible criterion was shown by Shearer, and other criteria that are easier to use computationally have been shown by Bissacot et al. [2011], Pegden [2014], Kolipaka and Szegedy [2011], and Kolipaka et al. [2012]. We show a new criterion for the Moser-Tardos algorithm to converge. This criterion is stronger than the LLLL criterion, and, in fact, can yield better results even than the full Shearer criterion. This is possible because it does not apply in the same generality as the original LLLL; yet, it is strong enough to cover many applications of the LLLL in combinatorics. We show a variety of new bounds and algorithms. A noteworthy application is for k-SAT, with bounded occurrences of variables. As shown in Gebauer et al. [2011], a k-SAT instance in which every variable appears L ‚\u2030§ $&frac;2^k+1e(k+1) times, is satisfiable. Although this bound is asymptotically tight (in k), we improve it to L ‚\u2030§ &frac;2k+1 (1 ‚à\u2019 1\/k)k$k‚à\u20191 ‚à\u2019 &frac;2k, which can be significantly stronger when k is small. We introduce a new parallel algorithm for the LLLL. While Moser and Tardos described a simple parallel algorithm for the Lov√°sz Local Lemma and described a simple sequential algorithm for a form of the Lopsided Lemma, they were not able to combine the two. Our new algorithm applies in nearly all settings in which the sequential algorithm works‚\u20AC\u201Dthis includes settings covered by our new, stronger LLLL criterion."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/2748","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/2748","fieldValue":"ACM"}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/18603","fieldValue":"Algorithm 669: BRKF45: a FORTRAN subroutine for solving first-order systems of nonstiff initial value problems for ordinary differential equations"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18603","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18603","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18604","fieldValue":"ACM"}