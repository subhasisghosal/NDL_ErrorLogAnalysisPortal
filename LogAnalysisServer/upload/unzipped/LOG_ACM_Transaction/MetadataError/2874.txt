{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/2877","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/19407","fieldValue":" â\u20ACœBLIS: A Framework for Rapidly Instantiating BLAS Functionalityâ\u20AC? by Field G. Van Zee and Robert A. van de Geijn (see: http:\/\/dx.doi.org\/10.1145\/2764454) includes single-platform BLIS performance results for both level-2 and level-3 operations that is competitive with OpenBLAS, ATLAS, and Intel MKL. A detailed description of the configuration used to generate the performance results was provided to the reviewer by the authors. All the software components used in the comparison were reinstalled and new performance results were generated and compared to the original results. After completing this process, the published results are deemed replicable by the reviewer."}{"fieldName":"dc.subject","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/19407","fieldValue":"BLAS"}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/19407","fieldValue":"Replicated Computational Results (RCR) Report for â\u20ACœBLIS: A Framework for Rapidly Instantiating BLAS Functionalityâ\u20AC?"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/19407","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/19407","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/19408","fieldValue":" We consider the problem of numerically integrating functions with hyperplane discontinuities over the entire Euclidean space in many dimensions. We describe a simple process through which the Euclidean space is partitioned into simplices on which the integrand is smooth, generalising the standard practice of dividing the interval used in one-dimensional problems. Our procedure is combined with existing adaptive cubature algorithms to significantly reduce the necessary number of function evaluations and memory requirements of the integrator. The method is embarrassingly parallel and can be trivially scaled across many cores with virtually no overhead. Our method is particularly pertinent to the integration of Green's functions, a problem directly related to the perturbation theory of impurity models. In three spatial dimensions, we observe a speed-up of order 100 which increases with increasing dimensionality."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/19408","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/19408","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/19409","fieldValue":" Problem-solving environments (PSEs) offer a powerful yet flexible and convenient means for general experimentation with computational methods, algorithm prototyping, and visualization and manipulation of data. Consequently, PSEs have become the modus operandi of many computational scientists and engineers. However, despite these positive aspects, PSEs typically do not offer the level of granularity required by the specialist or algorithm designer to conveniently modify the details. In other words, the level at which PSEs are black boxes is often still too high for someone interested in modifying an algorithm as opposed to trying an alternative. In this article, we describe odeToJava, a Java-based PSE for initial-value problems in ordinary differential equations. odeToJava implements explicit and linearly implicit implicit-explicit Runge--Kutta methods with error and stepsize control and intra-step interpolation (dense output), giving the user control and flexibility over the implementational aspects of these methods. We illustrate the usage and functionality of odeToJava by means of computational case studies of initial-value problems (IVPs)."}