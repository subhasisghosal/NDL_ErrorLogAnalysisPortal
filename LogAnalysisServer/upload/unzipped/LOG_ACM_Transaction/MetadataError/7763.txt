{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10338","fieldValue":" We study an intermittently connected network (ICN) composed of multiple clusters of wireless nodes. Within each cluster, nodes can communicate directly using the wireless links. However, these clusters are far away from each other such that direct communication between the clusters is impossible except through \"mobile\" contact nodes. These mobile contact nodes are data carriers that shuffle between clusters and transport data from the source to the destination clusters. There are several applications of our network model, such as clusters of mobile soldiers connected via unmanned aerial vehicles. Our work here focuses on a queue-based cross-layer technique known as the back-pressure algorithm. The algorithm is known to be throughput-optimal, as well as resilient to disruptions in the network, making it an ideal candidate communication protocol for our intermittently connected network. In this paper, we design a back-pressure routing\/rate control algorithm for ICNs. Though it is throughput-optimal, the back-pressure algorithm has several drawbacks when used in ICNs, including long end-to-end delays, large number of potential queues needed, and loss in throughput due to intermittency. We present a modified back-pressure algorithm that addresses these issues. We implement our algorithm on a 16-node experimental testbed and present our experimental results in this paper."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10338","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10338","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10338","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10339","fieldValue":" Intrusion detection is an important problem in sensor networks. Prior works in static sensor environments show that constructing sensor barriers with random sensor deployment can be effective for intrusion detection. In response to the recent surge of interest in mobile sensor applications, this paper studies the intrusion detection problem in a mobile sensor network, where it is believed that mobile sensors can improve barrier coverage. Specifically, we focus on providing k-barrier coverage against moving intruders. This problem becomes particularly challenging given that the trajectories of sensors and intruders need to be captured. We first demonstrate that this problem is similar to the classical kinetic theory of gas molecules in physics. We then derive the inherent relationship between barrier coverage performance and a set of crucial system parameters including sensor density, sensing range, and sensor and intruder mobility. We examine the correlations and sensitivity from the system parameters, and we derive the minimum number of mobile sensors that needs to be deployed in order to maintain the k-barrier coverage for a mobile sensor network. Finally, we show that the coverage performance can be improved by an order of magnitude with the same number of sensors when compared to that of the static sensor environment."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10339","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10339","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10339","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10340","fieldValue":" The difficulty of partitioning social graphs has introduced new system design challenges for scaling of online social networks (OSNs). Vertical scaling by resorting to full replication can be a costly proposition. Scaling horizontally by partitioning and distributing data among multiple servers using, for e.g., distributed hash tables (DHTs), can suffer from expensive interserver communication. Such challenges have often caused costly rearchitecting efforts for popular OSNs like Twitter and Facebook. We design, implement, and evaluate SPAR, a Social Partitioning and Replication middleware that mediates transparently between the application and the database layer of an OSN. SPAR leverages the underlying social graph structure in order to minimize the required replication overhead for ensuring that users have their neighbors' data colocated in the same machine. The gains from this aremultifold: Application developers can assume local semantics, i.e., develop as they would for a single machine; scalability is achieved by adding commodity machines with low memory and network I\/O requirements; and N+K redundancy is achieved at a fraction of the cost. We provide a complete system design, extensive evaluation based on datasets from Twitter, Orkut, and Facebook, and a working implementation. We show that SPAR incurs minimum overhead, can help a well-known Twitter clone reach Twitter's scale without changing a line of its application logic, and achieves higher throughput than Cassandra, a popular key-value store database."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10340","fieldValue":"{\"eissn\":\"\"}"}