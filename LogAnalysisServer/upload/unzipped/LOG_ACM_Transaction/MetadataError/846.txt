{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/13461","fieldValue":" An increasingly time-consuming part of the design flow of on-chip multiprocessors is the simulation of the interconnect architecture. The accurate simulation of state-of-the art network-on-chip interconnects can take hours, and this process is repeated for each design iteration because it provides valuable insights on communication latencies that can greatly affect the overall performance of the system. In this article, we identify a time-predictable network-on-chip architecture and show that its timing behaviour can be predicted using models which are far less complex than the architecture itself. We then explore such a feature to produce simplified and lightweight simulation models that can produce latency figures with more than 90&percnt; accuracy and simulate more than 1,000 times faster when compared to a cycle-accurate model of the same interconnect."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/13461","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/13461","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/13462","fieldValue":" This article introduces a new approach to extreme static test compaction for functional test sequences that modifies the sequence in order to enhance the ability to omit test vectors from it and thus compact it. In the new approach, modification of the sequence and omission of test vectors from it are tightly coupled by focusing both subprocedures on subsequences of limited lengths. In a new process that is referred to as folding, a subsequence is partitioned into two halves, and the goal of the modification is to ensure that the two halves are as similar as possible. With similar halves, the expectation is that it will be possible to omit test vectors from the subsequence. Experimental results demonstrate that the procedure produces extremely short functional test sequences for benchmark circuits."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/13462","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/13462","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/13463","fieldValue":" Interposer-based 2.5D integrated circuits (ICs) are seen today as a precursor to 3D ICs based on through-silicon vias (TSVs). All the dies and the interposer in a 2.5D IC must be adequately tested for product qualification. We present an efficient built-in self-test (BIST) architecture for targeting defects in dies and in the interposer interconnects. The proposed BIST architecture can also be used for fault diagnosis during interconnect testing. To reduce the overall test cost, we describe a test scheduling and optimization technique under power constraints. We present simulation results to validate the BIST architecture and demonstrate fault detection, synthesis results to evaluate the area overhead of the proposed BIST architecture, and test scheduling results to highlight the effectiveness of the optimization approach."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/13463","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/13463","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2284","fieldValue":" We consider the indexable dictionary problem, which consists of storing a set S ‚ä\u2020 &lcub;0,‚\u20AC¶,m ‚à\u2019 1&rcub; for some integer m while supporting the operations of rank(x), which returns the number of elements in S that are less than x if x ‚àà S, and ‚à\u20191 otherwise; and select(i), which returns the ith smallest element in S. We give a data structure that supports both operations in O(1) time on the RAM model and requires B(n, m) &plus; o(n) &plus; O(lg lg m) bits to store a set of size n, where B(n, m) &equals; ‚åälg (m\/n)‚å\u2039 is the minimum number of bits required to store any n-element subset from a universe of size m. Previous dictionaries taking this space only supported (yes\/no) membership queries in O(1) time. In the cell probe model we can remove the O(lg lg m) additive term in the space bound, answering a question raised by Fich and Miltersen [1995] and Pagh [2001]. We present extensions and applications of our indexable dictionary data structure, including: ‚\u20AC\u201Dan information-theoretically optimal representation of a k-ary cardinal tree that supports standard operations in constant time; ‚\u20AC\u201Da representation of a multiset of size n from &lcub;0,‚\u20AC¶,m ‚à\u2019 1&rcub; in B(n, m &plus; n) &plus; o(n) bits that supports (appropriate generalizations of) rank and select operations in constant time; and &plus; O(lg lg m) ‚\u20AC\u201Da representation of a sequence of n nonnegative integers summing up to m in B(n, m &plus; n) &plus; o(n) bits that supports prefix sum queries in constant time."}