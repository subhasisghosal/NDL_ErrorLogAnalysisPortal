{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/2993","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/2993","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/20820","fieldValue":" We present a modular approach to automatic complexity analysis of integer programs. Based on a novel alternation between finding symbolic time bounds for program parts and using these to infer bounds on the absolute values of program variables, we can restrict each analysis step to a small part of the program while maintaining a high level of precision. The bounds computed by our method are polynomial or exponential expressions that depend on the absolute values of input parameters. We show how to extend our approach to arbitrary cost measures, allowing the use of our technique to find upper bounds for other expended resources, such as network requests or memory consumption. Our contributions are implemented in the open-source tool KoAT, and extensive experiments show the performance and power of our implementation in comparison with other tools."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/20820","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/20820","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/20821","fieldValue":" The programming language Mezzo is equipped with a rich type system that controls aliasing and access to mutable memory. We give a comprehensive tutorial overview of the language. Then we present a modular formalization of Mezzoâ\u20AC™s core type system, in the form of a concurrent Î»-calculus, which we successively extend with references, locks, and adoption and abandon, a novel mechanism that marries Mezzoâ\u20AC™s static ownership discipline with dynamic ownership tests. We prove that well-typed programs do not go wrong and are data-race free. Our definitions and proofs are machine checked."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/20821","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/20821","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/20822","fieldValue":" An unsound claim can misdirect a field, encouraging the pursuit of unworthy ideas and the abandonment of promising ideas. An inadequate description of a claim can make it difficult to reason about the claim, for example, to determine whether the claim is sound. Many practitioners will acknowledge the threat of unsound claims or inadequate descriptions of claims to their field. We believe that this situation is exacerbated, and even encouraged, by the lack of a systematic approach to exploring, exposing, and addressing the source of unsound claims and poor exposition. This article proposes a framework that identifies three sins of reasoning that lead to unsound claims and two sins of exposition that lead to poorly described claims and evaluations. Sins of exposition obfuscate the objective of determining whether or not a claim is sound, while sins of reasoning lead directly to unsound claims. Our framework provides practitioners with a principled way of critiquing the integrity of their own work and the work of others. We hope that this will help individuals conduct better science and encourage a cultural shift in our research community to identify and promulgate sound claims."}{"fieldName":"dc.description","informationCode":"ERR_FOUND_HTML_TAG","handle":"12345678_acm\/20822","fieldValue":"Author Affiliation: Azul, H2O, Neurensic (Click, Cliff); Google (Diwan, Amer); IBM Research, NY, USA (Hind, Michael); Microsoft, Redmond, WA, USA (Frampton, Daniel); IBM Research, New York, USA (Sweeney, Peter F.); McGill University, Montreal, Quebec, Canada (Hendren, Laurie J.); Australian National University, ACT, Australia (Blackburn, Stephen M.); Oracle, Brisbane, Australia (Keynes, Nathan); Ghent University, Zwijnaarde, Belgium (Eeckhout, Lieven); University of Alberta, Alberta, Canada (Amaral, Jos Nelson); Universit&#224; della Svizzera italiana, Lugano, Switzerland (Hauswirth, Matthias; Nystrom, Nathaniel); Charles University, Czech Republic (Bulej, Lubomr); Saarland University, Saarbr&#252;cken Germany (Zeller, Andreas); Australian National University, Data61, Purdue University, ACT, Australia (Hosking, Antony L.); University of Kent, UK (Jones, Richard E.; Kalibera, Tomas); University of Waterloo, Waterloo, Ontario, Canada (Brecht, Tim; Fischmeister, Sebastian)"}