{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18734","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18734","fieldValue":"ACM"}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_LARGE","handle":"12345678_acm\/18735","fieldValue":"Algorithm 703: MEBDF: a FORTRAN subroutine for solving first-order systems of stiff initial value problems for ordinary differential equations"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18735","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18735","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18736","fieldValue":" For any typical multivariable expression f, point a in the domain of f, and positive integer maxorder, this method produces the numerical values of all partial derivatives at a up through order maxorder. By the technique known as automatic differentiation, theoretically exact results are obtained using numerical (as opposed to symbolic) manipulation. The key ideas are a hyperpyramid data structure and a generalized Leibniz's rule. Any expression in n variables corresponds to a hyperpyramid array, in n-dimensional space, containing the numerical values of all unique partial derivatives (not wasting space on different permutations of derivatives). The arrays for simple expressions are combined by hyperpyramid operators to form the arrays for more complicated expressions. These operators are facilitated by a generalized Leibniz's rule which, given a product of multivariable functions, produces any partial derivative by forming the minimum number of products (between two lower partials) together with a product of binomial coefficients. The algorithms are described in abstract pseudo-code. A section on implementation shows how these ideas can be converted into practical and efficient programs in a typical computing environment. For any specific problem, only the expression itself would require recoding."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18736","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18736","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18737","fieldValue":" We define the spline interpolating function, and obtain in directly computable form the elementary set of nonlinear equations describing nonlinear spline curves. Using Newton's and Newton-like methods, we solve typical spline configurations, and hence infer that the procedure will reliably yield precise extremum-energy solutions to nonlinear splines of arbitrary (but presumably reasonable) size and complexity.In order to distinguish between stable and unstable states of spline equilibria, we evaluate the energy change resulting from a perturbation, and we briefly discuss aspects of spline existence and uniqueness in relation to the solved examples. We demonstrate the abrupt transition which occurs at the threshold between spline existence and nonexistence, and conclude that proof of a spline's existence is implicit in the solution set of constants yielded by the method.The procedure may be regarded on the one hand as a precise and efficient research instrument for investigating the properties of true splines and elastica, and on the other as an everyday method for obtaining â\u20ACœthe smoothest interpolating curve of all.Contact is always maintained with the physical analogue to the curve, the thin uniform elastic beam, since the four assignable parameters used in each spline interval comprise the necessary and sufficient three angles and one length dimension of the actual physical spline.On an historical note, the method may be seen to offer progress in the search, begun in the late 17th century, for a definitive solution to the elastica problem."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18737","fieldValue":"ACM"}