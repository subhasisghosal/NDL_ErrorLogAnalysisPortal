{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18709","fieldValue":" A parallel thinning algorithm for digital patterns is presented. This algorithm can also be used for sequential thinning without the simulation of parallel computation. The mathematical background of the algorithm bases on the notion of the Euler characteristic. The proposed algorithm is simple and particularly faster than other parallel algorithms."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18709","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18709","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18710","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18710","fieldValue":"ACM"}{"fieldName":"dc.relation.haspart","informationCode":"ERR_FORMAT_HASPART","handle":"12345678_acm\/2760","fieldValue":"[{\"visible\":false,\"sortKey\":\"December 2012\",\"expandable\":true,\"handle\":\"12345678_acm\/2806\",\"title\":\"Issue 4(Special Issue on RITE), December 2012\"},{\"visible\":false,\"sortKey\":\"September 2012\",\"expandable\":true,\"handle\":\"12345678_acm\/2805\",\"title\":\"Issue 3, September 2012\"},{\"visible\":false,\"sortKey\":\"June 2012\",\"expandable\":true,\"handle\":\"12345678_acm\/2804\",\"title\":\"Issue 2, June 2012\"},{\"visible\":false,\"sortKey\":\"March 2012\",\"expandable\":true,\"handle\":\"12345678_acm\/2803\",\"title\":\"Issue 1, March 2012\"}]"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18711","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18711","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18712","fieldValue":" One way to combine the powers of symbolic computing with numeric computing is to automaticaly derive and produce numeric code. This approach has important applications in science and engineering. Once the desired formulas and procedures are derived in a symbolic manipulation system, they can be translated into a target numeric language by a code generator. GENCRAY is a code generator written in the C language for portability. GENCRAY defines a LISP-style input language that is translated into either FORTRAN 77 or CRAY FORTRAN. By defining its own input syntax, GENCRAY becomes a free-standing code translator that can be made to work with any symbolic manipulation system. GENCRAY is portable to any computer system with a standard C compiler. Input to GENCRAY can come from a file or directly from a symbolic system through a pipe. On UNIX systems with Berkeley networking, GENCRAY also runs as a network server. The input syntax is customizable to allow both Common and Franz LISP input styles. In addition to generating easily vectorizable CRAY FORTRAN code, GENCRAY also provides high-level, easy-to-use parallel programming macros to produce parallel code for the multiprocessor CRAY systems. The features, applications, usage, and implementation of GENCRAY are described. Techniques for producing parallel codes are discussed and illustrated by a substantial example contained in the Appendix."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18712","fieldValue":"ACM"}