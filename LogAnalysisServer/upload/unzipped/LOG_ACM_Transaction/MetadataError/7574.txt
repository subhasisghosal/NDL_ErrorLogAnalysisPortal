{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9955","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9956","fieldValue":" In the presence of local network outages, restoration and protection switching mechanisms redirect the traffic over alternative paths to mitigate the effect of failures. However, some failure combinations still lead to loss of ingress-egress connectivity within a network or to severe congestion due to rerouted traffic. Congestion may also be caused by unexpected traffic shifts due to changed user behavior or due to changes of interdomain routing. This paper presents a framework for the analysis of ingress-egress unavailability and link congestion due to: 1) failures; 2) changes of user behavior; and 3) changed interdomain routing. It proposes algorithms to find the most probable combinations of 1)-3) according to some models, and to evaluate the connectivity and the relative link load of the network under these conditions. We have implemented this concept in a software tool and its visualization of the results leads to a comprehensive view of the network's resilience. It helps to anticipate potential ingress-egress disconnection and congestion before failures and overload occur or before planned modifications (new infrastructure, new routing, new customers) take effect. Thus, it detects weak points in a network, predicts the effectiveness of potential upgrades, and thereby supports careful bandwidth overprovisioning."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9956","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9956","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9956","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9957","fieldValue":" Overlay routing is known to cause undesired instability in a network by operating in a selfish manner. The objectives of overlay routing, such as optimizing end-to-end latency, are often in conflict with the objectives of traffic engineering (TE) in the native layer, which is concerned about balancing load. In our paper, we build on past research that has investigated the recurring noncooperative interaction between overlay routing and traffic engineering, and develop strategies that improve the routing performance of a particular layer with incomplete information about the other layer. In our strategies, one layer acts as a leader that predicts the follower's reaction and undertakes countermeasures to prevent future deterioration in performance. Specifically, we propose two classes of strategies--friendly or hostile--for each layer. By simulating under different network characteristics, we show that these preemptive strategies achieve near-optimal performance for the leader and increase the overall stability of the network. Furthermore, we observe that the best performance for a particular layer is achieved only when the goals of the other layer are completely violated, thereby motivating a higher level of selfishness."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9957","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9957","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9957","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9958","fieldValue":" We address the problem of fair scheduling of packets in Internet routers with input-queued (IQ) switches and unity speedup. Scheduling in IQ switches is formulated as tracking the behavior of an output-queued (OQ) switch that provides optimal performance. We present the notion of \"lag\" as a performance metric that measures the difference between a packet's departure time in an IQ switch over that provided by an OQ switch. We prove that per-packet mean lag is bounded for a maximum weight-matching scheduling policy that uses lag values for its weights and derive a bound on the mean lag value using a Lyapunov function technique. Furthermore, we propose a simple heuristic tracking scheduling policy and evaluate its performance by simulation."}