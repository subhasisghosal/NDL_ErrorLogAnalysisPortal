{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/22967","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/22968","fieldValue":"Heimdahl, Mats P E"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/22968","fieldValue":" Test adequacy metrics defined over the structure of a program, such as Modified Condition and Decision Coverage (MC\/DC), are used to assess testing efforts. However, MC\/DC can be â\u20ACœcheatedâ\u20AC? by restructuring a program to make it easier to achieve the desired coverage. This is concerning, given the importance of MC\/DC in assessing the adequacy of test suites for critical systems domains. In this work, we have explored the impact of implementation structure on the efficacy of test suites satisfying the MC\/DC criterion using four real-world avionics systems. Our results demonstrate that test suites achieving MC\/DC over implementations with structurally complex Boolean expressions are generally larger and more effective than test suites achieving MC\/DC over functionally equivalent, but structurally simpler, implementations. Additionally, we found that test suites generated over simpler implementations achieve significantly lower MC\/DC and fault-finding effectiveness when applied to complex implementations, whereas test suites generated over the complex implementation still achieve high MC\/DC and attain high fault finding over the simpler implementation. By measuring MC\/DC over simple implementations, we can significantly reduce the cost of testing, but in doing so, we also reduce the effectiveness of the testing process. Thus, developers have an economic incentive to â\u20ACœcheatâ\u20AC? the MC\/DC criterion, but this cheating leads to negative consequences. Accordingly, we recommend that organizations require MC\/DC over a structurally complex implementation for testing purposes to avoid these consequences."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/22968","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/22968","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/22969","fieldValue":" Measuring productivity in globally distributed projects is crucial to improve team performance. These measures often display information on whether a given project is moving forward or starts to demonstrate undesired behaviors. In this paper we are interested in showing how analytical models could deliver insights for the behavior of specific distributed software collaboration projects. We present a model for distributed projects using stochastic automata networks (SAN) formalism to estimate, for instance, the required level of coordination for specific project configurations. We focus our attention on the level of interaction among project participants and its close relation with teamâ\u20AC™s productivity. The models are parameterized for different scenarios and solved using numerical methods to obtain exact solutions. We vary the teamâ\u20AC™s expertise and support levels to measure the impact on the overall project performance. As results, we present our derived productivity index for all scenarios and we state implications found in order to analyze popular preconceptions in GSD area, confirming some, and refusing others. Finally, we foresee ways to extend the models to represent more intricate behaviors and communication patterns that are usually present in globally distributed software projects."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/22969","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/22969","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/3243","fieldValue":" Although there is substantial evidence that performance in multitalker listening tasks can be improved by spatially separating the apparent locations of the competing talkers, very little effort has been made to determine the best locations and presentation levels for the talkers in a multichannel speech display. In this experiment, a call sign based color and number identification task was used to evaluate the effectiveness of three different spatial configurations and two different level normalization schemes in a seven-channel binaural speech display. When only two spatially adjacent channels of the seven-channel system were active, overall performance was substantially better with a geometrically spaced spatial configuration (with far-field talkers at âˆ\u201990Â°, âˆ\u201930Â°, âˆ\u201910Â°, 0Â°, &plus;10Â°, &plus;30Â°, and &plus;90Â° azimuth) or a hybrid near-far configuration (with far-field talkers at âˆ\u201990Â°, âˆ\u201930Â°, 0Â°, &plus;30Â°, and &plus;90Â° azimuth and near-field talkers at Â±90Â°) than with a more conventional linearly spaced configuration (with far-field talkers at âˆ\u201990Â°, âˆ\u201960Â°, âˆ\u201930Â°, 0Â°, &plus;30Â°, &plus;60Â°, and &plus;90Â° azimuth). When all seven channels were active, performance was generally better with a â\u20ACœbetter-earâ\u20AC? normalization scheme that equalized the levels of the talkers in the more intense ear than with a default normalization scheme that equalized the levels of the talkers at the center of the head. The best overall performance in the seven-talker task occurred when the hybrid near-far spatial configuration was combined with the better-ear normalization scheme. This combination resulted in a 20&percnt; increase in the number of correct identifications relative to the baseline condition with linearly spaced talker locations and no level normalization. Although this is a relatively modest improvement, it should be noted that it could be achieved at little or no cost simply by reconfiguring the HRTFs used in a multitalker speech display."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/3243","fieldValue":"ACM"}