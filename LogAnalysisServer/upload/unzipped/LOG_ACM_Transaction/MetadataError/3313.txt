{"fieldName":"dc.relation.haspart","informationCode":"ERR_FORMAT_HASPART","handle":"12345678_acm\/20850","fieldValue":"[{\"visible\":false,\"sortKey\":\"November 2013\",\"expandable\":true,\"handle\":\"12345678_acm\/20889\",\"title\":\"Issue 4, November 2013\"},{\"visible\":false,\"sortKey\":\"August 2013\",\"expandable\":true,\"handle\":\"12345678_acm\/20888\",\"title\":\"Issue 3, August 2013\"},{\"visible\":false,\"sortKey\":\"July 2013\",\"expandable\":true,\"handle\":\"12345678_acm\/20887\",\"title\":\"Issue 2, July 2013\"},{\"visible\":false,\"sortKey\":\"March 2013\",\"expandable\":true,\"handle\":\"12345678_acm\/20886\",\"title\":\"Issue 1, March 2013\"}]"}{"fieldName":"dc.relation.haspart","informationCode":"ERR_FORMAT_HASPART","handle":"12345678_acm\/20851","fieldValue":"[{\"visible\":false,\"sortKey\":\"October 2014\",\"expandable\":true,\"handle\":\"12345678_acm\/20893\",\"title\":\"Issue 4(Special Issue on Usenix Fast 2014), October 2014\"},{\"visible\":false,\"sortKey\":\"July 2014\",\"expandable\":true,\"handle\":\"12345678_acm\/20892\",\"title\":\"Issue 3, July 2014\"},{\"visible\":false,\"sortKey\":\"March 2014\",\"expandable\":true,\"handle\":\"12345678_acm\/20891\",\"title\":\"Issue 2, March 2014\"},{\"visible\":false,\"sortKey\":\"January 2014\",\"expandable\":true,\"handle\":\"12345678_acm\/20890\",\"title\":\"Issue 1, January 2014\"}]"}{"fieldName":"dc.relation.haspart","informationCode":"ERR_FORMAT_HASPART","handle":"12345678_acm\/20852","fieldValue":"[{\"visible\":false,\"sortKey\":\"November 2015\",\"expandable\":true,\"handle\":\"12345678_acm\/20898\",\"title\":\"Issue 4(Special Issue USENIX FAST 2015), November 2015\"},{\"visible\":false,\"sortKey\":\"July 2015\",\"expandable\":true,\"handle\":\"12345678_acm\/20897\",\"title\":\"Issue 3, July 2015\"},{\"visible\":false,\"sortKey\":\"March 2015\",\"expandable\":true,\"handle\":\"12345678_acm\/20896\",\"title\":\"Issue 2, March 2015\"},{\"visible\":false,\"sortKey\":\"February 2015\",\"expandable\":true,\"handle\":\"12345678_acm\/20895\",\"title\":\"Issue 1, February 2015\"},{\"visible\":false,\"sortKey\":\"December 2014\",\"expandable\":true,\"handle\":\"12345678_acm\/20894\",\"title\":\"Issue 1, December 2014\"}]"}{"fieldName":"dc.relation.haspart","informationCode":"ERR_FORMAT_HASPART","handle":"12345678_acm\/20853","fieldValue":"[{\"visible\":false,\"sortKey\":\"August 2016\",\"expandable\":true,\"handle\":\"12345678_acm\/20902\",\"title\":\"Issue 4, August 2016\"},{\"visible\":false,\"sortKey\":\"June 2016\",\"expandable\":true,\"handle\":\"12345678_acm\/20901\",\"title\":\"Issue 3, June 2016\"},{\"visible\":false,\"sortKey\":\"February 2016\",\"expandable\":true,\"handle\":\"12345678_acm\/20899\",\"title\":\"Issue 1(Special Issue on Massive Storage Systems and Technologies (MSST 2015)), February 2016\"},{\"visible\":false,\"sortKey\":\"February 2016\",\"expandable\":true,\"handle\":\"12345678_acm\/20900\",\"title\":\"Issue 2, February 2016\"}]"}{"fieldName":"dc.title","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/20903","fieldValue":"Editorial"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/20903","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/20903","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/20904","fieldValue":" Reducing management costs and improving the availability of large-scale distributed systems require automatic replica regeneration, that is, creating new replicas in response to replica failures. A major challenge to regeneration is maintaining consistency when the replica group changes. Doing so is particularly difficult across the wide area where failure detection is complicated by network congestion and node overload.In this context, this article presents Om, the first read\/write peer-to-peer, wide-area storage system that achieves high availability and manageability through online automatic regeneration while still preserving consistency guarantees. We achieve these properties through the following techniques. First, by utilizing the limited view divergence property in today's Internet and by adopting the witness model, Om is able to regenerate from any single replica, rather than requiring a majority quorum, at the cost of a small $(10^âˆ\u20196$ in our experiments) probability of violating consistency during each regeneration. As a result, Om can deliver high availability with a small number of replicas, while traditional designs would significantly increase the number of replicas. Next, we distinguish failure-free reconfigurations from failure-induced ones, enabling common reconfigurations to proceed with a single round of communication. Finally, we use a lease graph among the replicas and a two-phase write protocol to optimize for reads, so that reads in Om can be processed by any single replica. Experiments on PlanetLab show that consistent regeneration in Om completes in approximately 20 seconds."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/20904","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/20904","fieldValue":"ACM"}