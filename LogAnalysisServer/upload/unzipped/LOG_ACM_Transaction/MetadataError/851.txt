{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/13472","fieldValue":"Huang, Shih-Hsu"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/13472","fieldValue":"Yeh, Hua-Hsin"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/13472","fieldValue":"Nieh, Yow-Tyng"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/13472","fieldValue":" In the design of nonzero clock skew circuits, an increase of the short-path delay may improve circuit speed or reduce leakage power. However, the impact of increasing the short-path delay on the trade-off between circuit speed and leakage power has not been well studied. An analysis of previous works shows that they can be classified into two independent groups. One group uses extra buffers to increase the short-path delay for achieving the lower bound of the clock period; however, this group has a large overhead of leakage power. The other group uses the combination of threshold voltage assignment and gate sizing (TVA\/GS) to increase the short-path delay as possible for reducing leakage power; however, this group often does not work with the lower bound of the clock period. Accordingly, this article considers the simultaneous application of buffer insertion and TVA\/GS during clock skew scheduling. Our objective is to minimize the leakage power for working with the lower bound of the clock period. To the best of our knowledge, our approach is the first leakage-power-aware clock skew scheduling that guarantees working with the lower bound of the clock period. Benchmark data consistently show that our approach achieves good results in terms of both the circuit speed and the leakage power."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/13472","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/13472","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/13473","fieldValue":" Timing characterization of standard cells is one of the essential steps in VLSI design. The traditional static timing analysis (STA) tool assumes single input switching models for the characterization of multiple input gates. However, due to technology scaling, increasing operating frequency, and process variation, the probability of the occurrence of multiple input switching (MIS) is increasing. On the other hand, considering all possible MIS scenarios for the characterization of multiple input logic gates, is computationally intensive. To improve the efficiency, this work proposes a finite-point-based characterization methodology for multiple input gates with the effects of MIS. Furthermore, delay variation due to MIS is integrated into the STA flow through propagation of switching windows. The proposed modeling methodology is validated using benchmark circuits at the 45nm technology node for various operating conditions. Experimental results demonstrate significant reduction in computation cost and data volume with less than âˆ¼10&percnt; error compared to that of traditional SPICE simulation."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/13473","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/13473","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2285","fieldValue":" Andersson and Nilsson introduced in 1993 a level-compressed trie (for short, LC trie) in which a full subtree of a node is compressed to a single node of degree being the size of the subtree. Recent experimental results indicated a â\u20ACœdramatic improvementâ\u20AC? when full subtrees are replaced by â\u20ACœpartially filled subtrees.â\u20AC? In this article, we provide a theoretical justification of these experimental results, showing, among others, a rather moderate improvement in search time over the original LC tries. For such an analysis, we assume that n strings are generated independently by a binary memoryless source, with p denoting the probability of emitting a â\u20ACœ1â\u20AC? (and q &equals; 1 âˆ\u2019 p). We first prove that the so-called Î±-fillup level $F_n(Î±) (i.e., the largest level in a trie with Î± fraction of nodes present at this level) is concentrated on two values with high probability: either Fn(Î±) &equals; kn or Fn(Î±) &equals; kn &plus; 1, where kn &equals; log1\/&sqrt;pq n âˆ\u2019 &verbar;ln (p\/q)&verbar;\/2 $ln^3\/2 (1&sqrt;pq) Î¦âˆ\u20191$ (Î±) &sqrt; ln n &plus; O(1) is an integer and Î¦(x) denotes the normal distribution function. This result directly yields the typical depth (search time) Dn(Î±) in the Î±-LC tries, namely, we show that with high probability Dn(Î±) âˆ¼ C2 log log n, where C2 &equals; 1\/&verbar;log(1 âˆ\u2019 h\/log(1\/&sqrt;pq))&verbar; for p â\u2030  q and h &equals; âˆ\u2019plog pâˆ\u2019qlog q is the Shannon entropy rate. This should be compared with recently found typical depth in the original LC tries, which is C1log log n, where C1 &equals; 1\/&verbar;log(1âˆ\u2019h\/log(1\/min&lcub;p, 1âˆ\u2019p&rcub;))&verbar;. In conclusion, we observe that Î± affects only the lower term of the Î±-fillup level Fn$(Î±), and the search time in Î±-LC tries is of the same order as in the original LC tries."}