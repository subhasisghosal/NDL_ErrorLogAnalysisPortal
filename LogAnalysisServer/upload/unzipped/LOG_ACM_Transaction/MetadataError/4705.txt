{"fieldName":"dc.subject","informationCode":"ERR_FOUND_HTML_TAG","handle":"12345678_acm\/25147","fieldValue":"<scp>ML<\/scp>-<scp>DEVS<\/scp>"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/25147","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/25147","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/25148","fieldValue":" This article is concerned with the estimation of Î± &equals; E{r(Z)}, where Z is a random vector and the function values r(z) must be evaluated using simulation. Estimation problems of this form arise in the field of Bayesian simulation, where Z represents the uncertain (input) parameters of a system and r(z) is the expected performance of the system when Z &equals; z. Our approach involves obtaining (possibly biased) simulation estimates of the function values r(z) for a number of different values of z, and then using a (possibly weighted) average of these estimates to estimate Î±. We start by considering the case where the chosen values of z are independent and identically distributed observations of the random vector Z (independent sampling). We analyze the resulting estimator as the total computational effort c grows and provide numerical results. Then we show that improved convergence rates can be obtained through the use of techniques other than independent sampling. Specifically, our results indicate that the use of quasi-random sequences yields a better convergence rate than independent sampling, and that in the presence of a suitable special structure, it may be possible to use other numerical integration techniques (such as Simpsonâ\u20AC™s rule) to achieve the best possible rate $c^âˆ\u2019 1\/2$ as c â\u2020\u2019 âˆž. Finally, we present and analyze a general framework of estimators for Î± that encompasses independent sampling, quasi-random sequences, and Simpsonâ\u20AC™s rule as special cases."}{"fieldName":"dc.subject","informationCode":"ERR_FOUND_HTML_TAG","handle":"12345678_acm\/25148","fieldValue":"Simpson&rsquo;s rule"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/25148","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/25148","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/25149","fieldValue":" As multicore computer systems become increasingly complex, parallel simulation is becoming an important tool for exploring design space and evaluating design tradeoffs. The key to the success of parallel simulation is the ability to maintain a high degree of parallelism under synchronization constraints. In this article, an enhanced Null-message algorithm called FNM is presented that uses domain-specific knowledge to improve the performance of the basic Null-message algorithm. Based on their runtime states, the components of the simulation model can make a conservative forecast of future interprocess events. The forecast information is carried in the enhanced Null-messages, and, by combining the forecast from both sides of an interprocess link, FNM can achieve a dynamic system lookahead that is much greater than what the static system structure provides. This improved lookahead allows better exploitation of the simulation model's inherent parallelism and leads to better performance. Compared with the basic Null-message algorithm, FNM greatly reduces the amount of Null-messages and improves parallel simulation performance as a result, while at the same time it guarantees simulation correctness as the basic Null-message algorithm does. In tests on cycle-level models with up to 128 cores, FNM shows good scalability and proves to be an effective method."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/25149","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/25149","fieldValue":"ACM"}