{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10200","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10200","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/10201","fieldValue":"Wang, Shao-Cheng"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10201","fieldValue":" IEEE 802.11-based devices employ rate adaptation algorithms to dynamically switch data rates to accommodate the fluctuating wireless channel conditions. Many studies observed that when there are other stations transmitting in the network, existing rate adaptation performance degrades significantly due to its inability to differentiate losses between wireless noise and contention collisions. In this paper, we first conduct a systematic evaluation on the effectiveness of various rate adaptation protocols, which try to address this issue by exploiting optional RTS frames to isolate the wireless losses from collision losses. We observe that these existing schemes do not perform well in many background traffic scenarios and can mislead the rate adaptation algorithms to persist on using similar data rate combinations regardless of background traffic level, thus resulting in performance penalty in certain scenarios. The fundamental challenge is to dynamically adjust the rate selection decision objectives with respect to different background traffic levels, as well as fluctuating wireless conditions. In light of such observations, we design a new Background traffic-aWAre RatE adaptation algorithm (BEWARE) that addresses the above challenge. BEWARE uses a mathematical model to calculate on the fly the expected packet transmission time based on current wireless channel and background traffic conditions. We implement BEWARE design in a Linux-based driver, and the test-bed experiment results show that BEWARE outperforms other rate adaptation algorithms by up to 250% in various indoor and outdoor scenarios."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10201","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.subject","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10201","fieldValue":"CSMA\/CA"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10201","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10201","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10202","fieldValue":" We investigate, both theoretically and experimentally, the stability of CSMA-based wireless mesh networks, where a network is said to be stable if and only if the queue of each relay node remains (almost surely) finite. We identify two key factors that impact stability: the network size and the so-called \"stealing effect,\" a consequence of the hidden-node problem and nonzero transmission delays. We consider the case of a greedy source and prove, by using Foster's theorem, that three-hop networks are stable, but only if the stealing effect is accounted for. We also prove that four-hop networks are, on the contrary, always unstable (even with the stealing effect) and show by simulations that instability extends to more complex linear and nonlinear topologies. To tackle this instability problem, we propose and evaluate a novel, distributed flow-control mechanism called EZ-flow. EZ-flow is fully compatible with the IEEE 802.11 standard (i.e., it does not modify headers in packets), can be implemented using off-the-shelf hardware, and does not entail any communication overhead. EZ-flow operates by adapting the minimum congestion window parameter at each relay node, based on an estimation of the buffer occupancy at its successor node in the mesh. We show how such an estimation can be conducted passively by taking advantage of the broadcast nature of the wireless channel. Real experiments, run on a nine-node test-bed deployed over four different buildings, show that EZ-flow effectively smooths traffic and improves delay, throughput, and fairness performance."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10202","fieldValue":"{\"eissn\":\"\"}"}