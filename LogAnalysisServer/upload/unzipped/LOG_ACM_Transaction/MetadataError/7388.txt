{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/9586","fieldValue":"Kang, Seong-Ryong"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9586","fieldValue":" Video applications that transport delay-sensitive multimedia over best-effort networks usually require special mechanisms that can overcome packet loss without using retransmission. In response to this demand, forward-error correction (FEC) is often used in streaming applications to protect video and audio data in lossy network paths; however, studies in the literature report conflicting results on the benefits of FEC over best-effort streaming. To address this uncertainty, we start with a baseline case that examines the impact of packet loss on scalable (FGS-like) video in best-effort networks and derive a closed-form expression for the loss penalty imposed on embedded coding schemes under several simple loss models. Through this analysis, we find that the utility (i.e., usefulness to the user) of unprotected video converges to zero as streaming rates become high. We then study FEC-protected video streaming, re-derive the same utility metric, and show that for all values of loss rate inclusion of FEC overhead substantially improves the utility of video compared to the best-effort case. We finish the paper by constructing a dynamic controller on the amount of FEC that maximizes the utility of scalable video and show that the resulting system achieves a significantly better PSNR quality than alternative fixed-overhead methods."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9586","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9586","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9586","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9587","fieldValue":" A fundamental problem in quality-of-service (QoS) routing is to find a path between a source-destination node pair that satisfies two or more end-to-end QoS constraints. We model this problem using a graph with n vertices and m edges with K additive QoS parameters associated with each edge, for any constant K â\u2030¥ 2. This problem is known to be NP-hard. Fully polynomial time approximation schemes (FPTAS) for the case of K = 2 have been reported in the literature. We concentrate on the general case and make the following contributions. 1) We present a very simple O(Km + nlogn) time K -approximation algorithm that can be used in hop-by-hop routing protocols. 2) We present an FPTAS for one optimization version of the QoS routing problem with a time complexity of $O(m(n\/Îµ)^K-1).3) We present an FPTAS for another optimization version of the QoS routing problem with a time complexity of O(n log n + m(H\/Îµ)K-1$) when there exists an H-hop path satisfying all QoS constraints. When K is reduced to 2, our results compare favorably with existing algorithms. The results of this paper hold for both directed and undirected graphs. For ease of presentation, undirected graph is used."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/9587","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/9587","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/9587","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/9588","fieldValue":" Input-queued (IQ) switches overcome the scalability problem suffered by output-queued switches. In order to provide differential quality of services (QoS), we need to efficiently schedule a set of incoming packets so that every packet can be transferred to its destined output port before its deadline. If no such a schedule exists, we wish to find one that allows a maximum number of packets to meet their deadlines. Recently, this problem has been proved to be NP-complete if three or more distinct deadlines (classes) are present in the set. In this paper, we propose a novel algorithm named Flow-based Iterative Packet Scheduling (FIPS) for this scheduling problem. A key component in FIPS is a non-trivial algorithm that solves the problem for the case where two classes are present in the packet set. By repeatedly applying the algorithm for two classes, we solve the general case of an arbitrary number of classes more efficiently. Applying FIPS to a frame-based model effectively achieves differential QoS provision in IQ switches. Using simulations, we have compared FIPS performance with five well-known existing heuristic algorithms including Earliest-Deadline-First (EDF), Minimum-Laxity-First (MLF) and their variants. The simulation results demonstrate that our new algorithm solves the deadline guaranteed packet scheduling problem with a much higher success rate and a much lower packet drop ratio than all other algorithms."}