{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18503","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18503","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/2737","fieldValue":" This article studies the set cover problem under the semi-streaming model. The underlying set system is formalized in terms of a hypergraph G &equals; (V, E) whose edges arrive one by one, and the goal is to construct an edge cover F‚ä\u2020E with the objective of minimizing the cardinality (or cost in the weighted case) of F. We further consider a parameterized relaxation of this problem, where, given some 0 &les; &epsi; < 1, the goal is to construct an edge (1 ‚à\u2019 &epsi;)-cover, namely, a subset of edges incident to all but an &epsi;-fraction of the vertices (or their benefit in the weighted case). The key limitation imposed on the algorithm is that its space is limited to (poly)logarithmically many bits per vertex. Our main result is an asymptotically tight tradeoff between &epsi; and the approximation ratio: We design a semi-streaming algorithm that on input hypergraph G constructs a succinct data structure D such that for every 0 &les; &epsi; < 1, an edge (1 ‚à\u2019 &epsi;)-cover that approximates the optimal edge (1-)cover within a factor of f(&epsi;, n) can be extracted from D (efficiently and with no additional space requirements), where f(&epsi;, n) &equals; $&lbrace;^O(1\/&epsi;), if &epsi; > $1\/&sqrt;n$_O(&sqrt;n), otherwise$. In particular, for the traditional set cover problem, we obtain an O(&sqrt;n-approximation. This algorithm is proved to be best possible by establishing a family (parameterized by &epsi;) of matching lower bounds."}{"fieldName":"dc.description","informationCode":"ERR_FOUND_HTML_TAG","handle":"12345678_acm\/2737","fieldValue":"Author Affiliation: CNRS and Universit&#233; Paris Diderot, France (Rosn, Adi); Technion&#8212;Israel Institute of Technology, Haifa, Israel (Emek, Yuval)"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/2737","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/2737","fieldValue":"ACM"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/18504","fieldValue":" Popular codes for the numerical solution of nonstiff ordinary differential equations (ODEs) are based on a (fixed order) Runge-Kutta method, a variable order Adams method, or an extrapolation method. Extrapolation can be viewed as a variable order Runge-Kutta method. It is plausible that variation of order could lead to a much more efficient Runge-Kutta code, but numerical comparisons have been contradictory.We reconcile previous comparisons by exposing differences in testing methodology and incompatibilities of the implementations tested. An experimental Runge-Kutta code is compared to a state-of-the-art extrapolation code. With some qualifications, the extrapolation code shows no advantage. Extrapolation does not appear to be a particularly effective way to vary the order of Runge-Kutta methods. Although an acceptable way to solve nonstiff problems, our tests raise the question as to whether there is any point in pursuing it as a separate method."}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18504","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/18504","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/18505","fieldValue":"ACM"}