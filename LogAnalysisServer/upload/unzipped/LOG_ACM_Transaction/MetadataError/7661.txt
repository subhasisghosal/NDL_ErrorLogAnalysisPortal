{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/10132","fieldValue":"Lea, Chin-Tau"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10132","fieldValue":" It is well known that without admission control, network congestion is bound to occur. However, to implement admission control is difficult in IP-based networks, which are constructed out of the end-to-end principle, and semantics of most major signaling protocols can only be interpreted at the edge of the network. Even if routers can perform admission control internally, the path computation and the state updating activities required for setting up and tearing down each flow will overwhelm the network. A new QoS architecture, called a nonblocking network, has been proposed recently, and it requires no internal admission control and can still offer hard QoS guarantees. In this architecture, as long as each edge node admits not more than a specified amount of traffic, the network will never experience link congestion. For multicast networks, the main problem with this approach is low throughput. Conventional tree-based multicast routing algorithms lead to a throughput so low that the nonblocking concept is rendered impractical. In this paper, we show how network coding can solve this problem. We demonstrate that a nonblocking unicast network and a multicast network share the same optimal paths, and that a nonblocking multicast network with network coding can admit the same amount of traffic as a nonblocking unicast network. The above conclusions apply to explicit-routing (MPLS-like) and shortest-path routing (IP-like) networks."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10132","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10132","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10132","fieldValue":"ACM"}{"fieldName":"dc.contributor.author","informationCode":"WARN_INVALID_PERSON","handle":"12345678_acm\/10133","fieldValue":"Ho, Pin-Han"}{"fieldName":"dc.description.abstract","informationCode":"ERR_SPACE_AT_EDGE","handle":"12345678_acm\/10133","fieldValue":" Achieving fast and precise failure localization has long been a highly desired feature in all-optical mesh networks. Monitoring trail (m-trail) has been proposed as the most general monitoring structure for achieving unambiguous failure localization (UFL) of any single link failure while effectively reducing the amount of alarm signals flooding the networks. However, it is critical to come up with a fast and intelligent m-trail design approach for minimizing the number of m-trails and the total bandwidth consumed, which ubiquitously determines the length of the alarm code and bandwidth overhead for the m-trail deployment, respectively. In this paper, the m-trail design problem is investigated. To gain a deeper understanding of the problem, we first conduct a bound analysis on the minimum length of alarm code of each link required for UFL on the most sparse (i.e., ring) and dense (i.e., fully meshed) topologies. Then, a novel algorithm based on random code assignment (RCA) and random code swapping (RCS) is developed for solving the m-trail design problem. The algorithm is verified by comparison to an integer linear program (ILP) approach, and the results demonstrate its superiority in minimizing the fault management cost and bandwidth consumption while achieving significant reduction in computation time. To investigate the impact of topology diversity, extensive simulation is conducted on thousands of random network topologies with systematically increased network density."}{"fieldName":"dc.identifier.other","informationCode":"ERR_NULL_VALUE","handle":"12345678_acm\/10133","fieldValue":"{\"eissn\":\"\"}"}{"fieldName":"dc.publisher","informationCode":"WARN_TEXT_LENGTH_SMALL","handle":"12345678_acm\/10133","fieldValue":"ACM"}{"fieldName":"dc.publisher","informationCode":"WARN_ALL_WORD_UPPER","handle":"12345678_acm\/10133","fieldValue":"ACM"}